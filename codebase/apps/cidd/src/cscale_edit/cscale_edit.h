/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
/* ** Copyright UCAR (c) 1990 - 2016                                         */
/* ** University Corporation for Atmospheric Research (UCAR)                 */
/* ** National Center for Atmospheric Research (NCAR)                        */
/* ** Boulder, Colorado, USA                                                 */
/* ** BSD licence applies - redistribution and use in source and binary      */
/* ** forms, with or without modification, are permitted provided that       */
/* ** the following conditions are met:                                      */
/* ** 1) If the software is modified to produce derivative works,            */
/* ** such modified software should be clearly marked, so as not             */
/* ** to confuse it with the version available from UCAR.                    */
/* ** 2) Redistributions of source code must retain the above copyright      */
/* ** notice, this list of conditions and the following disclaimer.          */
/* ** 3) Redistributions in binary form must reproduce the above copyright   */
/* ** notice, this list of conditions and the following disclaimer in the    */
/* ** documentation and/or other materials provided with the distribution.   */
/* ** 4) Neither the name of UCAR nor the names of its contributors,         */
/* ** if any, may be used to endorse or promote products derived from        */
/* ** this software without specific prior written permission.               */
/* ** DISCLAIMER: THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS  */
/* ** OR IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED      */
/* ** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.    */
/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
/*
 * cscale_edit.h - Contains the object declarations for project cscale_edit
 * This file was generated by `gxv'.
 */

#include <errno.h>
#include <string.h>
#include <time.h>
#include <math.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/param.h>
#include <sys/types.h>
#include <xview/xview.h>
#include <xview/panel.h>
#include <xview/textsw.h>
#include <xview/xv_xrect.h>
#include <devguide/gdd.h>
#include <X11/Xlib.h>

#include "write_ui.h"
#include "read_ui.h"
#include "linear_ui.h"
#include "cscale_edit_ui.h"

#define MAX_COLORS    1024
#define COLOR_GROUP   100
#define SUCCESS       0
#define FAILURE       1
#define TRUE          1
#define FALSE         0

/*#define DEBUG*/
/*#define SYNC*/
#define SORT_LIST

extern double strtod();
time_t time();
static int sort_func();

Attr_attribute INSTANCE;

extern	cscale_edit_window1_objects	*Cscale_edit_window1;
extern	write_popup1_objects	*Write_popup1;
extern	read_popup1_objects	*Read_popup1;
extern	linear_popup1_objects	*Linear_popup1;

/*********************Structure Definitions *********************/
typedef struct {
  double max_val;
  double min_val;
  char hexval[20];
  char name[80];
  char label[80];
  long red;
  long green;
  long blue;
  long pix_val;
} COLOR_STRUCT;

typedef struct {
  double delta;
  long index;
  char name[80];
  long red, green, blue;
} SORT_STRUCT;

/*********************Canvas Geometry ***************************/
int Can_width, Can2_width;     /* Canvas 1 & 2 width */
int Can_height, Can2_height;   /* Canvas 1 & 2 height */
int Can_x, Can2_x;             /* Canvas 1 & 2 x position */
int Can_y, Can2_y;             /* Canvas 1 & 2 y position */
int Can_depth, Can2_depth;     /* Canvas 1 & 2 depth */
Drawable Canvas_xid;           /* Canvas 1 X id */
Drawable Canvas2_xid;          /* Canvas 2 X id */
GC Gc;                         /* Graphics context */
Display *Dpy;                  /* Main display */
int x_error;
int x_error_xid;

/*******************Colors/groups/fields **************************/
int Num_fields;                /* Number of fields */
int Field;                     /* Present field number */
int Ngroups;                   /* Total number of groups */
int Ncolors;                   /* Total number of colors */
int Above_below;               /* Value to insert above or below field */
int First_color, Last_color;   /* Color counters */
char *Color[MAX_COLORS];       /* Array of color names */
char *Sortednames[MAX_COLORS]; /* Array of sorted color names */
char *Colorname[MAX_COLORS];   /* ??? */
long Color_val[MAX_COLORS];    /* Array of pixel values */
long R[MAX_COLORS];            /* Array of red values */
long G[MAX_COLORS];            /* Array of green values */
long B[MAX_COLORS];            /* Array of blue values */
int Sort_flag;
COLOR_STRUCT Color_struct[64];   /* Structure for each field */
SORT_STRUCT **Sort_list;

/********************Write Popup************************************/
char Write_dir[35];
char Write_filename[35];
long Write_format;

/********************Read Popup**************************************/
char Read_dir[35];
char Read_filename[35];
long Read_format;

/********************Linear Popup************************************/
double Lin_min;
double Lin_delta;
double Lin_fields;
double Cscale_min;
double Cscale_max;
long Lin_arb_format;
long Cvalue;
