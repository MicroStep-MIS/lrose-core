MONITORING HOST PROCESS AND DATA STATS
======================================

Purpose
-------

You can use some special-purpose scripts in CVS in

  apps/procmap/src/scripts

to monitor the processes and data on hosts which use procmap and
the DataMapper.


When do we warn?
----------------

We have found that it is easy to overwarn, and people just ignore all of
the emails.

So the 'check_stats_and_warn' script is designed to send out warning
emails only when:

  (a) something goes wrong for the first time

and

  (b) once at the start of each day, summarizing current problems.


Catalog of scripts
------------------

  procmap_list_check: check the processes running on a host
                      against a process list

  DataMapper_list_check: check the data sets on a host against
                         a list of required data

  write_host_stats: for a particular host, write the current stats
                    to a specified directory. This script calls
                    procmap_list_check and DataMapper_list_check.

  check_stats_and_warn: check the host stats, and optionally email
                        out warnings as appropriate.


proc_list and data_list files
-----------------------------

For each of the hosts you are planning to monitor, you need to create a
copy of the proc_list and data_list.

The proc_list is simple a copy of the process list used by procmap.

The data_list is a list of data sets, with late and very-late times
specified for each set. For example:

  ###################################
  # data_list file for modelserver
  #
  # Format is:
  #  dir  late_secs  very_late_secs
  ###################################
  raw/acars_wmo        21600   43200
  raw/model/domain1    28800   50400
  raw/model/domain2    28800   50400
  raw/model/domain3    28800   50400
  raw/model_itfa/domain1    28800   50400
  raw/model_itfa/domain2    28800   50400

The proc_list and data_list files must reside in a single directory, and
have the names:

  proc_list.hostname
  data_list.hostname


Generating stats for each host
------------------------------

As a test example, we will monitor 3 hosts:

  hale
  charon
  galatea

We therefore have the following files:

  $PROJ_DIR/monitoring/params/proc_list.charon
  $PROJ_DIR/monitoring/params/data_list.charon

  $PROJ_DIR/monitoring/params/proc_list.galatea
  $PROJ_DIR/monitoring/params/data_list.galatea

  $PROJ_DIR/monitoring/params/proc_list.hale
  $PROJ_DIR/monitoring/params/data_list.hale

Periodically, say once every 5 minutes, we run the write_host_stats script,
once for each of the hosts to be monitored.

For example:

  write_host_stats -host hale -params ./params -stats /tmp/stats
  write_host_stats -host galatea -params ./params -stats /tmp/stats
  write_host_stats -host charon -params ./params -stats /tmp/stats

We generally write a master script called 'run_host_check' which makes the
above calls. We then call this from cron every 5 minutes:

*/5 * * * *  csh -c "run_host_check" 1> /dev/null 2> /dev/null


Stats files
-----------

The above example will generate status files in:

  /tmp/stats

An example stats listing:

  /tmp/stats:
  20091124/
  _latest_data_info
  _latest_data_info.buf
  _latest_data_info.stat
  _latest_data_info.xml

  /tmp/stats/20091124:
  21_hourly_charon_data_check.stats
  21_hourly_charon_proc_check.stats
  21_hourly_galatea_data_check.stats
  21_hourly_galatea_proc_check.stats
  21_hourly_hale_data_check.stats 
  21_hourly_hale_proc_check.stats
  22_hourly_charon_data_check.stats
  22_hourly_charon_proc_check.stats
  22_hourly_galatea_data_check.stats
  22_hourly_galatea_proc_check.stats
  22_hourly_hale_data_check.stats
  22_hourly_hale_proc_check.stats

There is just one file for each host, for each hour. Since we generally
monitor the hosts more than once per hour, the files are overwritten
during the hour.


Creating the check_stats_and_warn param file
--------------------------------------------

check_stats_and_warn is more complicated that the previous scripts,
so it has its own param file.

You can generate a param file with:

  check_stats_and_warn -print_params > param_file

You will get the following template. Change the parameters 

#=====================================================
# Parameters for check_stats_and_warn
# Generated at : 2009/11/24:22
#=====================================================
#
#------ Stats directory ----
# This is the directory for the statistics files
#   generated by the host_check script.
#
stats_dir = not-set
#
#-------- process host list -------------
# List of hosts to check for running processes
# Comma-separated list
# For example:
#   proc_hostnames = host1,host2,host3
#
proc_hostnames = host1,host2,host3,host4
#
#-------- data host list -------------
# List of hosts to check for data sets
# Comma-separated list
# For example:
#   data_hostnames = host1,host2,host3
#
data_hostnames = host2,host4
#
#--------- Option to send email ---------
# If TRUE, warning email will be sent to addresses
#   in email list if problems are found
#
send_email = FALSE
email_list = monitoring@rap.ucar.edu
#
#------ Option to set a primary host ----
# If TRUE, you will designate a primary host.
# This is done if the script is running on multiple hosts.
#   In this situation, email is not sent from other hosts
#   unless the primary is not reporting. We determine if
#   the primary is reporting by the presence of its
#   process stats file
#
set_primary_host = FALSE
primary_host = titan
#
#
#=====================================================


Running check_stats_and_warn
----------------------------

We generally write a wrapper script:

  run_check_stats_and_warn

which contains something like the following:

  #!/bin/csh 
  cd $PROJ_DIR/stats/params
  check_stats_and_warn -params check_stats_and_warn.params |& \
      LogFilter -d $ERRORS_LOG_DIR -p check_stats_and_warn >& /dev/null &

This should then be called at the end of each hour, by cron:

59 * * * * csh -c "run_check_stats_and_warn >& /dev/null"
