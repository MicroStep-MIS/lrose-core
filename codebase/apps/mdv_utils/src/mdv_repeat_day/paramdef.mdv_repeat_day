/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
/* ** Copyright UCAR (c) 1990 - 2016                                         */
/* ** University Corporation for Atmospheric Research (UCAR)                 */
/* ** National Center for Atmospheric Research (NCAR)                        */
/* ** Boulder, Colorado, USA                                                 */
/* ** BSD licence applies - redistribution and use in source and binary      */
/* ** forms, with or without modification, are permitted provided that       */
/* ** the following conditions are met:                                      */
/* ** 1) If the software is modified to produce derivative works,            */
/* ** such modified software should be clearly marked, so as not             */
/* ** to confuse it with the version available from UCAR.                    */
/* ** 2) Redistributions of source code must retain the above copyright      */
/* ** notice, this list of conditions and the following disclaimer.          */
/* ** 3) Redistributions in binary form must reproduce the above copyright   */
/* ** notice, this list of conditions and the following disclaimer in the    */
/* ** documentation and/or other materials provided with the distribution.   */
/* ** 4) Neither the name of UCAR nor the names of its contributors,         */
/* ** if any, may be used to endorse or promote products derived from        */
/* ** this software without specific prior written permission.               */
/* ** DISCLAIMER: THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS  */
/* ** OR IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED      */
/* ** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.    */
/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */


typedef enum {
  DEBUG_OFF, DEBUG_ON
} debug_t;

paramdef enum debug_t
{
  p_default = {DEBUG_OFF};
  p_descr = "Debug option";
  p_help = "If set, debug messages will be printed appropriately";
} debug;



paramdef int {
  p_min = 0;
  p_default = 60; 
  p_private = FALSE;
  p_descr = "Single int value";
  p_help = "Time to sleep between checks.";
} Delay;     
               
paramdef int {
  p_min = 0;
  p_default = 60; 
  p_private = FALSE;
  p_descr = "Single int value";
  p_help = "Time to add to current time, seconds.";
} DelT;     
                        

paramdef boolean {
  p_default = FALSE;
  p_private = FALSE;
  p_descr = "Single bool value";
  p_help = "Make a single pass or not. If set, only one day is converted";
} single_pass;


paramdef string {
  p_default = ".";
  p_private = FALSE;
  p_descr = "Single string value";
  p_help = "Input directory.";
} InDir;

paramdef string {
  p_default = ".";
  p_private = FALSE;
  p_descr = "Single string value";
  p_help = "Output top directory.";
} OutDir;

paramdef string {
  p_default = "primary";
  p_private = FALSE;
  p_descr = "Single string value";
  p_help = "ProcMap instance.";
} instance;


        