/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
/* ** Copyright UCAR (c) 1990 - 2016                                         */
/* ** University Corporation for Atmospheric Research (UCAR)                 */
/* ** National Center for Atmospheric Research (NCAR)                        */
/* ** Boulder, Colorado, USA                                                 */
/* ** BSD licence applies - redistribution and use in source and binary      */
/* ** forms, with or without modification, are permitted provided that       */
/* ** the following conditions are met:                                      */
/* ** 1) If the software is modified to produce derivative works,            */
/* ** such modified software should be clearly marked, so as not             */
/* ** to confuse it with the version available from UCAR.                    */
/* ** 2) Redistributions of source code must retain the above copyright      */
/* ** notice, this list of conditions and the following disclaimer.          */
/* ** 3) Redistributions in binary form must reproduce the above copyright   */
/* ** notice, this list of conditions and the following disclaimer in the    */
/* ** documentation and/or other materials provided with the distribution.   */
/* ** 4) Neither the name of UCAR nor the names of its contributors,         */
/* ** if any, may be used to endorse or promote products derived from        */
/* ** this software without specific prior written permission.               */
/* ** DISCLAIMER: THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS  */
/* ** OR IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED      */
/* ** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.    */
/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */

commentdef {
  p_header = "Very specific program to extract sounding and surface station\n"
	"data from an MDV volume.";

}

paramdef string {
  p_descr = "URL to trigger off, typically of the form\n"
	    "mdvp:://host.domain:[port]:dir/dir";
  p_help = "Program runs when new data appear here."; 
  p_default = {"/home/oien/rap/apps/LES/src/LES2mdv/mdv"};
} TriggerUrl;
 
paramdef string {
  p_descr = "Output URL for surface data, typically of the form\n"
	    "spdbp:://host.domain:[port]:dir/dir";
  p_help = "Them data called the METAR, they go here."; 
  p_default = {"spdbp:://localhost::./spdb/surf"};
} OutSurfaceUrl;


paramdef string {
  p_descr = "Output URL for sounding data, typically of the form\n"
	    "spdbp:://host.domain:[port]:dir/dir";
  p_help = "Them data called the sounding, they go here."; 
  p_default = {"spdbp:://localhost::./spdb/sound"};
} OutSoundingUrl;
            

typedef struct {
	string name;
	double lat;
	double lon;
	int planeNum;
} stationDef_t;

paramdef struct stationDef_t {
  p_descr = "Define stations.";
  p_help = "Check it out."; 
  p_default = {
	{"KLOT", 41.9921, -95.0108, 0 },
	{"KIND", 42.0073, -94.9905, 0 }
      };
} stationDef[];


paramdef int {
  p_descr = "Valid time for data";
  p_help = "Default is 15 minutes"; 
  p_default = 900;
} Expiry;


paramdef string {
  p_descr = "Instance to check in to Procmap with";
  p_help = "Set to something unique."; 
  p_default = {"primary"};
} Instance;

paramdef enum mode {
  p_options = {ARCHIVE, REALTIME};
  p_default = {REALTIME};
  p_descr = "Operation mode";
  p_help = "Archive mode automatically invoked by -interval option.";
} Mode;
    
paramdef int {
  p_default = 1800;
  p_private = FALSE;
  p_descr = "Maximum valid age for files";
  p_help = "REALTIME mode only.";
} MaxRealtimeValidAge;         

paramdef boolean {
  p_default = "FALSE";
  p_private = FALSE;
  p_descr = "Set to print debugging messages.";
  p_help = "Defaults to FALSE";
} Debug;   

