/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
/* ** Copyright UCAR (c) 1990 - 2016                                         */
/* ** University Corporation for Atmospheric Research (UCAR)                 */
/* ** National Center for Atmospheric Research (NCAR)                        */
/* ** Boulder, Colorado, USA                                                 */
/* ** BSD licence applies - redistribution and use in source and binary      */
/* ** forms, with or without modification, are permitted provided that       */
/* ** the following conditions are met:                                      */
/* ** 1) If the software is modified to produce derivative works,            */
/* ** such modified software should be clearly marked, so as not             */
/* ** to confuse it with the version available from UCAR.                    */
/* ** 2) Redistributions of source code must retain the above copyright      */
/* ** notice, this list of conditions and the following disclaimer.          */
/* ** 3) Redistributions in binary form must reproduce the above copyright   */
/* ** notice, this list of conditions and the following disclaimer in the    */
/* ** documentation and/or other materials provided with the distribution.   */
/* ** 4) Neither the name of UCAR nor the names of its contributors,         */
/* ** if any, may be used to endorse or promote products derived from        */
/* ** this software without specific prior written permission.               */
/* ** DISCLAIMER: THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS  */
/* ** OR IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED      */
/* ** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.    */
/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
////////////////////////////////////////////////////////////////////////////////
//
//  Parameter definitions for axfSonde application
//
//  Terri L. Betancourt RAP, NCAR, Boulder, CO, 80307, USA
//  June 1999
//
//  $Id: paramdef.axfSonde,v 1.11 2016/03/07 01:25:08 dixon Exp $
//
////////////////////////////////////////////////////////////////////////////////


commentdef {
  p_header = "Runtime Management";
} 

typedef enum {
  ARCHIVE, REALTIME
} mode_t;

paramdef enum mode_t {
  p_default = ARCHIVE;
  p_descr = "Operation mode";
  p_help = "Program may be run in two modes, ARCHIVE and REALTIME.";
} mode;

paramdef boolean {
  p_default = {FALSE};
  p_descr = "Debug option";
  p_help = "If set, debug messages will be printed";
} debug;

paramdef char* {
  p_descr = "Directory for debug message output if debug is set to TRUE";
  p_help = "Set to an empty string to prevent debug file logging.  If log_dir is empty and debug is TRUE, debug messages will appear in stdout.";
  p_default = {""};
} log_dir;

paramdef char* {
  p_default = {"Test"};
  p_descr = "Instance";
  p_help = "Process instance for registration with process mapper";
} instance;


commentdef {
  p_header = "Input Data";
} 

paramdef char* {
  p_default = {"./latest.data"};
  p_descr = "File path of sounding input data.";
} input_file_path;

paramdef char* {
  p_descr = "Directory for ldata index management.";
  p_help = "If set to an empty string, the ldata index file will be written to the directory of the input_file_path.  Use a separate index_dir if the input_file_path is cross mounted on a read only partition.";
  p_default = {""};
} index_dir;

paramdef long {
  p_default = {00000};
  p_descr = "Station identifier for sounding of interest.";
  p_help = "Only one sounding station is input into the SPDB database.";
} station_id;

paramdef double {
  p_default = {0.0};
  p_descr = "Latitude for sounding station of interest.";
  p_help = "Only one sounding station is input into the SPDB database.";
} station_latitude;

paramdef double {
  p_default = {0.0};
  p_descr = "Longitude for sounding station of interest.";
  p_help = "Only one sounding station is input into the SPDB database.";
} station_longitude;

paramdef double {
  p_default = {0.0};
  p_descr = "Altitude for sounding station of interest.";
  p_help = "Only one sounding station is input into the SPDB database.";
} station_altitude;

paramdef boolean {
  p_default = {FALSE};
  p_descr = "Time override option";
  p_help = "If set, ingest time will be set to the current time";
} set_time_now;

paramdef long {
  p_default = {180};
  p_descr = "Sounding file check frequency";
  p_help = "Number of seconds to wait before we check the input directory for a new file again";
} check_seconds;

commentdef {
  p_header = "Sounding Output";
}

paramdef char* {
  p_descr = "List of URLs for spdb output";
  p_help = "Example URL syntax spdbp:://$(HOST)::spdb/soundings/sonde";
} spdb_urls[];

paramdef long {
  p_default = {180};
  p_min = {0};
  p_max = {720};
  p_descr = "Number of seconds before sounding data should expired";
  p_help = ""; 
} expire_secs;
