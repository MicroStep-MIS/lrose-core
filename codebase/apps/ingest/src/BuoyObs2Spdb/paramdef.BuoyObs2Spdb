/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
/* ** Copyright UCAR (c) 1990 - 2016                                         */
/* ** University Corporation for Atmospheric Research (UCAR)                 */
/* ** National Center for Atmospheric Research (NCAR)                        */
/* ** Boulder, Colorado, USA                                                 */
/* ** BSD licence applies - redistribution and use in source and binary      */
/* ** forms, with or without modification, are permitted provided that       */
/* ** the following conditions are met:                                      */
/* ** 1) If the software is modified to produce derivative works,            */
/* ** such modified software should be clearly marked, so as not             */
/* ** to confuse it with the version available from UCAR.                    */
/* ** 2) Redistributions of source code must retain the above copyright      */
/* ** notice, this list of conditions and the following disclaimer.          */
/* ** 3) Redistributions in binary form must reproduce the above copyright   */
/* ** notice, this list of conditions and the following disclaimer in the    */
/* ** documentation and/or other materials provided with the distribution.   */
/* ** 4) Neither the name of UCAR nor the names of its contributors,         */
/* ** if any, may be used to endorse or promote products derived from        */
/* ** this software without specific prior written permission.               */
/* ** DISCLAIMER: THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS  */
/* ** OR IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED      */
/* ** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.    */
/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
/**********************************************************
 * paramdef.BuoyObs2Spdb
 *
 * This file contains the TDRP parameter definitions for
 * BuoyObs2Spdb
 */

commentdef
{
  p_header = "BuoyObs2Spdb";
  p_text = "This program reads buoy observation data and puts it in an SPDB "
           "station report database.";
};


/***********************************************************************
 * Debugging
 */

commentdef
{
  p_header = "DEBUGGING PARAMETERS";
  p_text = "Parameters controlling debug outputs.";
};

paramdef boolean
{
  p_descr = "debug flag";
  p_default = false;
} debug;

paramdef boolean
{
  p_descr = "verbose debug flag";
  p_default = false;
} verbose;


/***********************************************************************
 * Process parameters
 */

commentdef
{
  p_header = "PROCESS PARAMETERS";
};

paramdef string
{
  p_descr = "Process instance";
  p_help = "Used for registration with procmap.";
  p_default = "Test";
} instance;


/***********************************************************************
 * Process I/O.
 */

commentdef
{
  p_header = "PROCESS I/O PARAMETERS";
  p_text = "Parameters describing the input and output locations.";
};

typedef enum
{
  FILE_LIST,
  INPUT_DIR,
  INPUT_DIR_RECURSE,
  LATEST_DATA
} trigger_mode_t;

paramdef enum trigger_mode_t
{
  p_descr = "Input triggering mode";
  p_help = "\tIn FILE_LIST mode, the program operates on the files specified "
           "on the command line.\n"
           "\tIn INPUT_DIR mode, the program will process new files as they "
           "appear in the input_dir directory.\n"
           "\tIn INPUT_DIR_RECURSE mode, the program will process new files "
           "as they appear in the input_dir directory or in any "
           "subdirectory.\n"
           "\tIn LATEST_DATA mode, the program will process new files as they "
           "appear in the _latest_data_info file in the input_dir directory.\n";
  p_default = "FILE_LIST";
} trigger_mode;

paramdef string
{
  p_descr = "Input directory";
  p_default = "$(RAP_DATA_DIR)/raw/stations";
} input_dir;

paramdef string
{
  p_descr = "Input filename substring";
  p_help = "Used only if trigger_mode is set to INPUT_DIR or INPUT_DIR_RECURSE. "
           "The program will only process files whose name contains "
           "this substring. "
           "Set to \"\" to process all files in the input directory.\n";
  p_default = "";
} input_substring;

paramdef string
{
  p_descr = "Input filename exclude substring";
  p_help = "Used only if trigger_mode is set to INPUT_DIR or INPUT_DIR_RECURSE. "
           "The program will not process files whose name contains "
           "this substring. "
           "Set to \"\" to process all files in the input directory.\n";
  p_default = "";
} exclude_substring;

paramdef long
{
  p_descr = "Maximum number of seconds input files are valid.";
  p_help = "Used only if trigger_mode is set to LATEST_DATA.";
  p_default = 600;
} max_valid_secs;

paramdef string
{
  p_descr = "Output URL";
  p_default = "spdbp:://localhost::spdb/stations";
} output_url;

paramdef long
{
  p_descr = "Expire time for station reports in seconds";
  p_default = 3600;
} expire_secs;


/***********************************************************************
 * Generating map file.
 */

commentdef
{
  p_header = "MAP FILE PARAMETERS";
  p_text = "Parameters for generating an optional map file of the processed "
           "stations.";
};

paramdef boolean
{
  p_descr = "Flag indicating whether to generate the optional map file of "
            "stations processed.";
  p_default = false;
} create_map_file;

paramdef string
{
  p_descr = "Path for optional map file.";
  p_default = "./buoy_obs.map";
} map_file_path;

typedef struct
{
  long pen_x;
  long pen_y;
} pen_t;

paramdef struct pen_t
{
  p_descr = "List of points making up the icon used for the buoys.";
  p_help = "Use 32767, 32767 for pen up. "
           "The default icon is a cross-hair.";
  p_default = { { 2, 0 },
                { -2, 0 },
                { 32767, 32767 },
                { 0, 2 },
                { 0, -2 },
                { 32767, 32767 } };
} map_icon[];

paramdef long
{
  p_descr = "X offset for buoy label in map file.";
  p_default = 4;
} map_label_x_offset;

paramdef long
{
  p_descr = "Y offset for buoy label in map file.";
  p_default = 4;
} map_label_y_offset;
