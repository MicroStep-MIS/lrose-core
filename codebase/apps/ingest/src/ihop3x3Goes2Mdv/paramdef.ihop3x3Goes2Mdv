/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
/* ** Copyright UCAR (c) 1990 - 2016                                         */
/* ** University Corporation for Atmospheric Research (UCAR)                 */
/* ** National Center for Atmospheric Research (NCAR)                        */
/* ** Boulder, Colorado, USA                                                 */
/* ** BSD licence applies - redistribution and use in source and binary      */
/* ** forms, with or without modification, are permitted provided that       */
/* ** the following conditions are met:                                      */
/* ** 1) If the software is modified to produce derivative works,            */
/* ** such modified software should be clearly marked, so as not             */
/* ** to confuse it with the version available from UCAR.                    */
/* ** 2) Redistributions of source code must retain the above copyright      */
/* ** notice, this list of conditions and the following disclaimer.          */
/* ** 3) Redistributions in binary form must reproduce the above copyright   */
/* ** notice, this list of conditions and the following disclaimer in the    */
/* ** documentation and/or other materials provided with the distribution.   */
/* ** 4) Neither the name of UCAR nor the names of its contributors,         */
/* ** if any, may be used to endorse or promote products derived from        */
/* ** this software without specific prior written permission.               */
/* ** DISCLAIMER: THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS  */
/* ** OR IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED      */
/* ** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.    */
/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
/****************************************************************
 * parameter definitions for ihop3x3Goes2Mdv
 *  
 * Nancy Rehak/Kay Levesque
 * June 2003
 */

/****************************************************************
 * Debugging and process control.
 */

commentdef
{
  p_header = "DEBUGGING AND PROCESS CONTROL";
}

typedef enum
{
  DEBUG_OFF,
  DEBUG_WARNINGS,
  DEBUG_NORM,		
  DEBUG_VERBOSE	
} debug_t;

paramdef enum debug_t
{
  p_descr = "Debug option";
  p_help = "If set, debug messages will be printed with the "
           "appropriate level of detail.";
  p_default = DEBUG_OFF;
} debug;

paramdef string
{
  p_descr = "Process instance";
  p_help = "Used for registration with procmap.";
  p_default = "Test";
} instance;


/*********************************************************
 * Input and output data
 */

commentdef
{
  p_header = "INPUT AND OUTPUT DATA.";
}

paramdef long
{
	p_descr = "Number of header lines in each input file.";
	p_help = "The program will skip this number of lines "
		"at the beginning of each file.";
	p_min = 0;
	p_default = 1;
} num_header_lines;

paramdef long
{
  p_descr = "Max age of input data";
  p_help = "For realtime only - max age of input data for it to be valid";
  p_min = 0;
  p_default = 7200;
} max_realtime_valid_age;

paramdef string
{
  p_descr = "Output URL.";
  p_help = "Output data is in mdv format.";
  p_default = "mdvp:://localhost:port:directory";
} output_url;

typedef enum
{
  PROJ_FLAT,
  PROJ_LATLON
} proj_type_t;

typedef struct
{
  proj_type_t proj_type;
  long nx;
  long ny;
  double dx;
  double dy;
  double minx;
  double miny;
  double rotation;
  double origin_lat;
  double origin_lon;
} xy_grid_t;

paramdef struct xy_grid_t
{
  p_default = {PROJ_FLAT, 40, 40, 10, 10, 0, 0, 0, 34.8, -99.3};

} xy_grid;

paramdef double
{
  p_default = {1000.0, 950.0, 920.0, 850.0, 780.0, 700.0, 670.0, 620.0, 570.0,
		500.0, 475.0, 430.0, 400.0, 350.0, 300.0, 250.0, 200.0, 150.0,
		135.0, 115.0, 100.0};

} pressure_levels[];
