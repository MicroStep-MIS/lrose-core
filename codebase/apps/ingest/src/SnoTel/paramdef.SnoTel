/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
/* ** Copyright UCAR (c) 1990 - 2016                                         */
/* ** University Corporation for Atmospheric Research (UCAR)                 */
/* ** National Center for Atmospheric Research (NCAR)                        */
/* ** Boulder, Colorado, USA                                                 */
/* ** BSD licence applies - redistribution and use in source and binary      */
/* ** forms, with or without modification, are permitted provided that       */
/* ** the following conditions are met:                                      */
/* ** 1) If the software is modified to produce derivative works,            */
/* ** such modified software should be clearly marked, so as not             */
/* ** to confuse it with the version available from UCAR.                    */
/* ** 2) Redistributions of source code must retain the above copyright      */
/* ** notice, this list of conditions and the following disclaimer.          */
/* ** 3) Redistributions in binary form must reproduce the above copyright   */
/* ** notice, this list of conditions and the following disclaimer in the    */
/* ** documentation and/or other materials provided with the distribution.   */
/* ** 4) Neither the name of UCAR nor the names of its contributors,         */
/* ** if any, may be used to endorse or promote products derived from        */
/* ** this software without specific prior written permission.               */
/* ** DISCLAIMER: THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS  */
/* ** OR IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED      */
/* ** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.    */
/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
/*********************************************************
 * parameter definitions for NidsVad2Spdb
 *
 * Niles Oien, RAP, NCAR
 * P.O.Box 3000, Boulder, CO, USA, 80307-3000
 *
 * January 2002
 */


commentdef {
  p_header = "Small program to ingest SnoTel snow gauge data.\n"
	"Data are stored as METARS with the data in the liquid_accum\n"
	"field. If the input file is named according to a\n"
	"YYYYMMDD.txt convention, then the time for data is\n"
	"taken as midnight on that day UTC, otherwise the\n"
	"input file ctime is used. Niles Oien.";

}


paramdef boolean
{
  p_default = FALSE;
  p_descr = "Debug option";
  p_help = "If set, debug messages will be printed.";
} debug;

paramdef string {
  p_default = "primary";
  p_descr = "Process instance";
  p_help = "Used for registration with procmap.";
} instance;

paramdef enum op_mode {
  p_options = {ARCHIVE, REALTIME};
  p_default = REALTIME;
  p_descr = "Operation mode";
  p_help = "Program may be run in two modes, archive and realtime. In realtime mode, the conversion is performed for each input file as it becomes available. In archive mode, the file list is obtained from the command line.";
} mode;
      
commentdef {
  p_header = "DATA INPUT.";
}

paramdef string {
  p_default = "./raw/SnoTel";
  p_descr = "Input directory.";
  p_help = "Directory path for input data files.";
} InDir;

paramdef string {
  p_default = "";
  p_descr = "Input file extension.";
  p_help = "Default is to search for anything - if string is NULL, all extensions are valid.";
} fileExtension;

paramdef int {
  p_default = 7200;
  p_descr = "Max age of input data";
  p_help = "For realtime only - max age of input data for it to be valid";
} max_realtime_valid_age;

paramdef string {
  p_default = "./snotel_station_locations.dat";
  p_descr = "File that specifies snotel station locations.";
  p_help = "Format is : \n"
	"STATION NAME LAT LON ALT (METERS) SPDB METAR ID";
} SnoTelLocationFile;

commentdef {
  p_header = "DATA OUTPUT.";
}

paramdef boolean {
  p_default = TRUE;
  p_descr = "Set to FALSE to get total precip.";
  p_help = "Default is to get only snow precip.";
} snowPrecip;

paramdef boolean {
  p_default = FALSE;
  p_descr = "Set to TRUE to ingest data as percent of average.";
  p_help = "Default is to ingest data as water equivalent.";
} percentOfAverage;

paramdef string {
  p_default = "spdbp:://localhost::$(PROJECT)/spdb/SnoTel";
  p_descr = "URL for output SPDB data.";
} OutUrl;

paramdef int {
  p_default = 1800;
  p_descr = "How long data are valid, seconds.";
} expiry;




