//////////////////////////////////////////////////////////////////////
// parameter definitions BrightBandFilter
//
// Mike Dixon, RAP, NCAR,
// P.O.Box 3000, Boulder, CO, USA, 80307-3000
//
// Aug 1999
//

commentdef {
  p_header = "Program name: BrightBandFilter";
  p_text = "BrightBandFilter finds bright band in a 3-D reflectivity file, removes it and writes out a adjusted 2-D reflectivity field.";
}

typedef enum {
  DEBUG_OFF, DEBUG_NORM, DEBUG_VERBOSE
} debug_t;

paramdef enum debug_t
{
  p_default = DEBUG_OFF;
  p_descr = "Debug option";
  p_help = "If set, debug messages will be printed appropriately";
} debug;

paramdef string {
  p_default = "Test";
  p_descr = "Process instance";
  p_help = "Used for registration with procmap.";
} instance;

typedef enum {
  ARCHIVE, REALTIME, FILELIST
} mode_t;

paramdef enum mode_t {
  p_default = ARCHIVE;
  p_descr = "Operating mode";
  p_help = "In REALTIME mode, the program waits for a new input file. In ARCHIVE mode, it moves through the data between the start and end times set on the command line. In FILELIST mode, it moves through the list of file names specified on the command line.";
} mode;

paramdef string {
  p_default = "mdv/input";
  p_descr = "URL for input data.";
  p_help = "This is used in REALTIME and ARCHIVE modes only. In FILELIST mode, the file paths are specified on the command line.";
} input_url;

paramdef int {
  p_default = 0;
  p_descr = "dBZ field position in input MDV files.";
  p_help = "Position of reflectivity (dBZ) data in the radar volumes.";
} dbz_field;

paramdef float {
  p_default = -1.0;
  p_descr = "Min altitude CAPPI used in analysis (km).";	
  p_help = "Bright band computations are done between the min and max analysis altitudes.";
} analysis_min_altitude;

paramdef float {
  p_default = 25.0;
  p_descr = "Max altitude CAPPI used in analysis (km).";	
  p_help = "Bright band computations are done between the min and max analysis altitudes.";
} analysis_max_altitude;

paramdef float {
  p_default = 18.0;
  p_min = -40.0;
  p_max = 90.0;
  p_descr = "Low reflectivity threshold (dBZ).";
  p_help = "Reflectivity below this threshold is ignored in "
    "making the computations. This prevents clear air returns from "
    "creating areas of low precipitation.";
} dbz_threshold;

paramdef string {
  p_default = "mdv/bband";
  p_descr = "Output URL.";
  p_help = "Output data is written to this URL.";
} output_url;

typedef enum {
  COMPRESSION_ASIS = -1,
  COMPRESSION_NONE =  0,
  COMPRESSION_RLE =   1,
  COMPRESSION_LZO =   2,
  COMPRESSION_ZLIB =  3,
  COMPRESSION_BZIP =  4 
} compression_type_t;

paramdef enum compression_type_t {
  p_default = COMPRESSION_ZLIB;
  p_descr = "Set compression type.";
} output_compression_type;


