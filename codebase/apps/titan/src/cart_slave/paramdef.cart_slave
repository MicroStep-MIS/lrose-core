/*********************************************************
 * parameter definitions for cart_slave
 *
 * Mike Dixon, RAP, NCXAR, Boulder, CO, USA, 80307-3000
 *
 * March 1997
 */

paramdef enum debug
{
  p_options = {DEBUG_OFF, DEBUG_WARNINGS, DEBUG_NORM, DEBUG_EXTRA};
  p_default = {DEBUG_OFF};
  p_descr = "Debug option";
  p_help = "If set, debug messages will be printed appropriately";
} debug;

paramdef long {
  p_default = {0};
  p_min = {0};
  p_max = {3};
  p_descr = "Malloc debug level";
  p_help = "0 - none, 1 - corruption checking, 2 - records all malloc blocks and checks, 3 - printout of all mallocs etc.";
} malloc_debug_level;

paramdef char* {
  p_default = {"Test"};
  p_descr = "Process instance";
  p_help = "Used for registration with procmap.";
} instance;

paramdef char* {
  p_default = {"slave_table"};
  p_descr = "Slave table path";
  p_help = "Path to slave lookup table - generated by rctable_generate.";
} slave_table_path;

paramdef char* {
  p_default = {"local"};
  p_descr = "polar2mdv default host name";
  p_help = "This host is used if the server mapper does not resolve the polar2mdv host.";
} polar2mdv_default_host;

paramdef long {
  p_default = {41000};
  p_descr = "polar2mdv default port number";
  p_help = "This port is used if the server mapper does not resolve the polar2mdv host.";
} polar2mdv_default_port;

paramdef char* {
  p_default = {"Test"};
  p_descr = "polar2mdv instance";
  p_help = "The instance polar2mdv registers with servmap.";
} polar2mdv_instance;

paramdef long {
  p_default = {20000};
  p_descr = "Max packet length for comms with polar2mdv.";
} max_packet_length;

paramdef char* {
  p_default = {"cart_slave.out"};
  p_descr = "Output file path";
  p_help = "Cart slave writes a file at regular intervals. This is the path to that file.";
} output_file_path;

paramdef long {
  p_default = {30};
  p_descr = "Output interval (secs)";
  p_help = "Cart_slave generates an output file at this interval.";
} output_interval;

