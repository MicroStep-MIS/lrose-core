/****************************************************
 * TDRP params for precip_map
 ****************************************************/

/*
 * Debug option.
 * If set, debug messages will be printed appropriately.
 *
 * Type: enum
 * Default: DEBUG_OFF 
 * Legal values: DEBUG_OFF, DEBUG_WARNINGS, DEBUG_NORM,
 *   DEBUG_EXTRA.
 */
debug = DEBUG_NORM;

/*
 * Malloc debug level.
 * 0 - none, 1 - corruption checking, 2 - records all malloc blocks
 *   and checks, 3 - printout of all mallocs etc.
 *
 * Type: long
 * Default: 0 
 * Min value: 0 
 * Max value: 3 
 */
malloc_debug_level = 2;

/*
 * Process instance.
 * Used for registration with procmap.
 *
 * Type: string
 * Default: "Test" 
 */
instance = "Test";

/*
 * Operation mode.
 * Program may be run in two modes, archive and realtime. In realtime
 *   mode, the analysis is performed for each volume scan as it becomes
 *   available. In archiv mode, all of the scans in a track file are
 *   processed.
 *
 * Type: enum
 * Default: ARCHIVE 
 * Legal values: ARCHIVE, REALTIME.
 */
mode = ARCHIVE;

/*
 * Map type.
 * Map type may be 1) FORECAST - from advecting reflectivity using
 *   storm tracks, 2) PERSISTENCE - from current reflectivity for
 *   entire forecast period, 3) VERIFY - from on the actual reflectivity
 *   data, 4) REFL_FORECAST - forecast of refl. at the forecast duration,
 *   5) ACCUM_PERIOD - precip accumulation for specified duration
 *   (accum_duration), 6) ACCUM_FROM_START - precip accumulation
 *   from start.
 *
 * Type: enum
 * Default: FORECAST 
 * Legal values: FORECAST, PERSISTENCE, VERIFY,
 *   REFL_FORECAST, ACCUM_PERIOD, ACCUM_FROM_START.
 */
map_type = REFL_FORECAST;

/*
 * Option to produce thresholded forecast.
 * Thresholded forecast uses individual storm motion. Unthresholded
 *   forecast uses area-weighted mean storm motion.
 *
 * Type: boolean
 * Default: TRUE 
 */
thresholded_forecast = FALSE;

/*
 * Min area for unthresholded forecast.
 * For unthresholded forecasts, the storms areas are summed.
 *   The sum must exceed the min area for a valid forecast. If not,
 *   forecast speed is set to 0.
 *
 * Type: double
 * Default: 100 
 * Min value: 1 
 */
min_area_unthresholded = 1;

/*
 * Smoothing radius for unthresholded refl forecast.
 * For unthresholded reflectivity forecasts, the motion for
 *   a storm is applied to the forecast grid in a manner which will
 *   move the individual storm elements, as well as the elements
 *   of the grid adjacent to the storm. All points within a distance
 *   of proj_area_major_radius from the storm centroid are given
 *   a velocity equal to storm speed. Points outside this radius
 *   but within a concentric radius given by (proj_area_major_radius
 *   + smoothing radius) are given a lesser velocity - the velocity
 *   decreases linearly from storm velocity at the inner radius
 *   to 0 at the outer radius.
 *
 * Type: double
 * Default: 50 
 * Min value: 1 
 */
smoothing_radius = 150;

/*
 * Option to write debug motion grids for precip forecast.
 * If set, the motion grids are written to motion_grid_dir.
 *
 * Type: boolean
 * Default: FALSE 
 */
write_motion_grid_files = TRUE;

/*
 * Directory for motion grid files.
 * The motion grid files reside in this directory.
 *
 * Type: string
 * Default: "." 
 */
motion_grid_dir = "/dx3/dixon/titan/refl_motion";

/*
 * Max valid age of input files in realtime mode (secs).
 * This the max valid age for an incoming file. The program will
 *   wait for a data file more recent than this.
 *
 * Type: double
 * Default: 360 
 * Min value: 1 
 */
max_realtime_valid_age = 360;

/*
 * Min altitude CAPPI used in composite (km).
 * All maps are based on composite reflectivity. This altitude
 *   forms the base CAPPI for the composite. Only CAPPI's above this
 *   are used in making the composite.
 *
 * Type: double
 * Default: 0 
 * Min value: 0 
 */
composite_min_altitude = 3;

/*
 * Max altitude CAPPI used in composite (km).
 * All maps are based on composite reflectivity. This altitude
 *   forms the top CAPPI for the composite. Only CAPPI's below this
 *   are used in making the composite.
 *
 * Type: double
 * Default: 25 
 * Min value: 0 
 */
composite_max_altitude = 25;

/*
 * Radar data directory.
 * Upper level directory for dobson cartesian radar data files.
 *
 * Type: string
 * Default: "none" 
 */
rdata_dir = "/dx3/dixon/titan/cdata";

/*
 * Storms data directory.
 * Directory for storm and track data files.
 *
 * Type: string
 * Default: "none" 
 */
storms_dir = "/dx3/dixon/titan/storms";

/*
 * Precip map directory.
 * Upper level directory for dobson precip map files.
 *
 * Type: string
 * Default: "none" 
 */
map_dir = "/dx3/dixon/titan/refl_fcast";

/*
 * Reflectivity field position.
 * Position of reflectivity (dBZ) data in the radar volumes.
 *
 * Type: long
 * Default: 0 
 */
dbz_field = 0;

/*
 * Min dbz value.
 * For reflectivity forecasts, reflectivity values below this
 *   are not used.
 *
 * Type: double
 * Default: -30 
 * Min value: -50 
 * Max value: 100 
 */
min_dbz = 10;

/*
 * Low reflectivity threshold (dBZ).
 * Reflectivity below this threshold is ignored.
 *
 * Type: double
 * Default: 10 
 * Min value: -40 
 * Max value: 70 
 */
low_refl_threshold = 10;

/*
 * Hail reflectivity threshold (dBZ).
 * The threshold between rain and hail.
 *
 * Type: double
 * Default: 55 
 * Min value: 40 
 * Max value: 70 
 */
hail_refl_threshold = 55;

/*
 * Option to use separate file for Z-R.
 * If set, the Z-R parameters are obtained from a file residing
 *   in the zr_dir directory.
 *
 * Type: boolean
 * Default: FALSE 
 */
get_zr_from_file = FALSE;

/*
 * Directory for ZR files.
 * The ZR files reside in this directory.
 *
 * Type: string
 * Default: "." 
 */
zr_dir = "/space/dixon/titan/rtest/zr";

/*
 * Z-R parameters.
 * Parameters in Z-R relationship.
 *
 * Type: struct
 */
ZR = {
  500, /* coeff:double */
  1.6  /* expon:double */
};

/*
 * Time delay for precip to hit ground (secs).
 * This delay is used to drift the reflectivity before computing
 *   the precipitation.
 *
 * Type: double
 * Default: 120 
 * Min value: 0 
 * Max value: 10800 
 */
time_to_ground = 0;

/*
 * Forecast durations (secs).
 * Array of duration of precip forecast map. For REFL_FORECAST
 *   map_type and file_time_stamp FORECAST_TIME, all durations
 *   are used. For all other cases, only the first duration is used,
 *   the rest are ignored.
 *
 * Type: double
 * Default: 1800 
 * Min value: 0 
 * Max value: 10800 
 * Array elem size: 8 bytes
 * Array has no max number of elements
 */
forecast_durations = {0, 120, 240};

/*
 * Accumulation duration (secs).
 * Duration of precip accumulation map. ACCUM_PERIOD map_type
 *   only.
 *
 * Type: double
 * Default: 1800 
 * Min value: 0 
 * Max value: 10800 
 */
accum_duration = 1200;

/*
 * Radar vol scan interval (secs).
 * Interval between radar volume scans (secs).
 *
 * Type: double
 * Default: 360 
 * Min value: 0 
 * Max value: 1800 
 */
scan_interval = 360;

/*
 * File time stamp - REFL_FORECAST map_type only.
 * If GENERATE_TIME, file names match generate data time. If FORECAST_TIME,
 *   file names match forecast time. This applies only to the REFL_FORECAST
 *   map_type.
 *
 * Type: enum
 * Default: GENERATE_TIME 
 * Legal values: GENERATE_TIME, FORECAST_TIME.
 */
file_time_stamp = FORECAST_TIME;

/*
 * Option to round the forecast times.
 * Option to round the forecast times. The interval used is given
 *   by parameter rounding_interval.
 *
 * Type: boolean
 * Default: FALSE 
 */
round_forecast_times = TRUE;

/*
 * Rounding interval for forecast times (secs).
 * If round_forecast_times is TRUE, the forecast times are rounded
 *   to this interval.
 *
 * Type: double
 * Default: 600 
 * Min value: 10 
 * Max value: 86400 
 */
rounding_interval = 60;

/*
 * Option to force file overwrites.
 * If set, previously generated files will be overwritten whenever
 *   the program is rerun on the same date set in REALTIME mode. In
 *   ARCHIVE mode, overwrites always occur. IF file_time_stamp
 *   is set to FORECAST_TIME, overwrites always occur.
 *
 * Type: boolean
 * Default: FALSE 
 */
overwrite = FALSE;


