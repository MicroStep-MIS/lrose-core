/****************************************************
 * TDRP params for forecast_monitor
 ****************************************************/

/*
 * Debug option.
 * If set, debug messages will be printed appropriately.
 *
 * Type: enum
 * Default: DEBUG_OFF 
 * Legal values: DEBUG_OFF, DEBUG_WARNINGS, DEBUG_NORM,
 *   DEBUG_EXTRA.
 */
debug = DEBUG_OFF;

/*
 * Malloc debug level.
 * 0 - none, 1 - corruption checking, 2 - records all malloc blocks
 *   and checks, 3 - printout of all mallocs etc.
 *
 * Type: long
 * Default: 0 
 * Min value: 0 
 * Max value: 3 
 */
malloc_debug_level = 0;

/*
 * Process instance.
 * Used for registration with procmap.
 *
 * Type: string
 * Default: "Test" 
 */
instance = "Test";

/*
 * Operation mode.
 * Program may be run in two modes, archive and realtime. In realtime
 *   mode, the analysis is performed for each volume scan as it becomes
 *   available. In archiv mode, all of the scans in a track file are
 *   processed.
 *
 * Type: enum
 * Default: ARCHIVE 
 * Legal values: ARCHIVE, REALTIME.
 */
mode = ARCHIVE;

/*
 * Printout option.
 * Option to print stats on tracks.
 *
 * Type: boolean
 * Default: FALSE 
 */
print_stats = TRUE;

/*
 * Max valid age of input files in realtime mode (secs).
 * This the max valid age for an incoming file. The program will
 *   wait for a data file more recent than this.
 *
 * Type: double
 * Default: 360 
 * Min value: 1 
 */
max_realtime_valid_age = 360;

/*
 * Radar data directory.
 * Upper level directory for dobson cartesian radar data files.
 *
 * Type: string
 * Default: "none" 
 */
rdata_dir = "none";

/*
 * Storms data directory.
 * Directory for storm and track data files.
 *
 * Type: string
 * Default: "none" 
 */
storms_dir = "none";

/*
 * Output directory.
 * Directory for output data file, must have 'tmp' subdirectory.
 *
 * Type: string
 * Default: "none" 
 */
output_dir = ".";

/*
 * Output file extension.
 * File name extension for forecast monitor output files.
 *
 * Type: string
 * Default: "fmon" 
 */
output_file_ext = "fmon";

/*
 * Reflectivity field position.
 * Position of reflectivity (dBZ) data in the radar volumes.
 *
 * Type: long
 * Default: 0 
 */
dbz_field = 0;

/*
 * Forecast lead time (secs).
 * Lead time for which forecast stats are to be computed (secs).
 *
 * Type: double
 * Default: 1800 
 * Min value: 0 
 * Max value: 10800 
 */
forecast_lead_time = 1800;

/*
 * Time search margin (secs).
 * Time margin to allow for when searching for scan times (secs).
 *
 * Type: double
 * Default: 1800 
 * Min value: 0 
 * Max value: 10800 
 */
time_search_margin = 120;

/*
 * Use memory-mapped IO.
 * Use memory-mapped IO for access to storm and track files.
 *
 * Type: boolean
 * Default: FALSE 
 */
use_mmio = FALSE;

/*
 * Parabolic growth for storm trend.
 * Apply parabolic growth to storm trend, such that the growth
 *   curve is flat after parabolic_growth_period secs.
 *
 * Type: boolean
 * Default: FALSE 
 */
parabolic_growth = FALSE;

/*
 * Parabolic growth period (secs).
 * Time at which parabolic growth curve becomes flat.
 *
 * Type: double
 * Default: 1800 
 * Min value: 0 
 * Max value: 10800 
 */
parabolic_growth_period = 1800;

/*
 * Min history for valid forecast(secs).
 * Min history for a forecast to be valid - if the storm has less history
 *   than this then the forecast is not evaluated.
 *
 * Type: double
 * Default: 900 
 * Min value: 0 
 * Max value: 10800 
 */
forecast_min_history = 750;

/*
 * Grid for verification.
 *
 * Type: struct
 */
verify_grid = {
  -147.5, /* min_x:double */
  -147.5, /* min_y:double */
  5, /* dx:double */
  5, /* dy:double */
  60, /* nx:long */
  60  /* ny:long */
};


