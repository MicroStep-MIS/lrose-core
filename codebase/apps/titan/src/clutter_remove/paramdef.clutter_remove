/*********************************************************
 * parameter definitions clutter_remove
 *
 * Mike Dixon, RAP, NCXAR, Boulder, CO, USA, 80307-3000
 *
 * Jan 1996
 */

paramdef enum debug_t {
  p_options = {DEBUG_OFF, DEBUG_WARNINGS, DEBUG_NORM, DEBUG_EXTRA};
  p_default = {DEBUG_OFF};
  p_descr = "Debug option";
  p_help = "If set, debug messages will be printed appropriately";
} debug;

paramdef long {
  p_default = {0};
  p_min = {0};
  p_max = {3};
  p_descr = "Malloc debug level";
  p_help = "0 - none, 1 - corruption checking, 2 - records all malloc blocks and checks, 3 - printout of all mallocs etc.";
} malloc_debug_level;

paramdef char* {
  p_default = {"Test"};
  p_descr = "Process instance";
  p_help = "Used for registration with procmap.";
} instance;

paramdef enum mode_t {
  p_options = {REALTIME, ARCHIVE};
  p_default = {REALTIME};
  p_descr = "Operational mode";
  p_help = "Realtime mode - waits for new data; archive mode runs on file list";
} mode;

paramdef char* {
  p_default = {"null"};
  p_descr = "Input directory";
  p_help = "Path of input directory - realtime mode only";
} input_dir;

paramdef char* {
  p_default = {"mdv"};
  p_descr = "Output file extension";
} output_file_ext;

paramdef char* {
  p_default = {"null"};
  p_descr = "Output directory";
  p_help = "Path of output directory";
} output_dir;

paramdef long {
  p_min = {60};
  p_default = {300};
  p_descr = "Max age of input data";
  p_help = "For realtime only - max age of input data for it to be valid";
} max_input_data_age;

paramdef boolean {
  p_default = {TRUE};
  p_descr = "Flag to use clutter table. If FALSE, use clutter volume";
} use_clutter_table;

paramdef char* {
  p_default = {"none"};
  p_descr = "Clutter table file path";
} clutter_table_file_path;

paramdef char* {
  p_default = {"none"};
  p_descr = "Cluter volume file path";
} clutter_volume_file_path;

paramdef long {
  p_min = {0};
  p_default = {0};
  p_descr = "Dbz field";
  p_help = "The field number of the dbz data in the file";
} dbz_field;

paramdef double {
  p_min = {-40.0};
  p_max = {80.0};
  p_default = {0.0};
  p_descr = "Clutter dBZ threshold";
  p_help = "Data is only considered a candidate for clutter if it exceeds this threshold. This is only needed if no clutter table is available";
} dbz_threshold;

paramdef double {
  p_min = {-20.0};
  p_max = {20.0};
  p_default = {0.0};
  p_descr = "Clutter dBZ margin";
  p_help = "Data which exceeds the clutter value by this margin is not condidered clutter. This is only needed if no clutter table is available";
} dbz_margin;



