/****************************************************
 * TDRP params for clutter_remove
 ****************************************************/

/*
 * Debug option.
 * If set, debug messages will be printed appropriately.
 *
 * Type: enum
 * Default: DEBUG_OFF 
 * Legal values: DEBUG_OFF, DEBUG_WARNINGS, DEBUG_NORM,
 *   DEBUG_EXTRA.
 */
debug = DEBUG_OFF;

/*
 * Malloc debug level.
 * 0 - none, 1 - corruption checking, 2 - records all malloc blocks
 *   and checks, 3 - printout of all mallocs etc.
 *
 * Type: long
 * Default: 0 
 * Min value: 0 
 * Max value: 3 
 */
malloc_debug_level = 2;

/*
 * Operational mode.
 * Realtime mode - waits for new data; archive mode runs on file
 *   list.
 *
 * Type: enum
 * Default: REALTIME 
 * Legal values: REALTIME, ARCHIVE.
 */
mode = ARCHIVE;

/*
 * Input directory.
 * Path of input directory - realtime mode only.
 *
 * Type: string
 * Default: "null" 
 */
input_dir = "$(TITAN_HOME)/ncr/dobson";

/*
 * Output file extension.
 *
 * Type: string
 * Default: "mdv" 
 */
output_file_ext = "mdv";

/*
 * Output directory.
 * Path of output directory.
 *
 * Type: string
 * Default: "null" 
 */
output_dir = "$(TITAN_HOME)/cdata";

/*
 * Max age of input data.
 * For realtime only - max age of input data for it to be valid.
 *
 * Type: long
 * Default: 300 
 * Min value: 60 
 */
max_input_data_age = 300;

/*
 * Flag to use clutter table. If FALSE, use clutter volume.
 *
 * Type: boolean
 * Default: TRUE 
 */
use_clutter_table = FALSE;

/*
 * Clutter table file path.
 *
 * Type: string
 * Default: "none" 
 */
clutter_table_file_path = "none";

/*
 * Cluter volume file path.
 *
 * Type: string
 * Default: "none" 
 */
clutter_volume_file_path = "$(TITAN_HOME)/clutter_data/median";
/* clutter_volume_file_path = "$(TITAN_HOME)/ncr/dobson/19960129/153144.dob"; */

/*
 * Dbz field.
 * The field number of the dbz data in the file.
 *
 * Type: long
 * Default: 0 
 * Min value: 0 
 */
dbz_field = 0;

/*
 * Clutter dBZ threshold.
 * Data is only considered a candidate for clutter if it exceeds
 *   this threshold. This is only needed if no clutter table is available.
 *
 * Type: double
 * Default: 0 
 * Min value: -40 
 * Max value: 80 
 */
dbz_threshold = 20;

/*
 * Clutter dBZ margin.
 * Data which exceeds the clutter value by this margin is not condidered
 *   clutter. This is only needed if no clutter table is available.
 *
 * Type: double
 * Default: 0 
 * Min value: 0 
 * Max value: 20 
 */
dbz_margin = 6;




