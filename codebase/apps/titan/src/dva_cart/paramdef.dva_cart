/*********************************************************
 * parameter definitions for dva_cart
 *
 * Mike Dixon, RAP, NCXAR, Boulder, CO, USA, 80307-3000
 *
 * Nov 1996
 */

paramdef enum debug
{
  p_options = {DEBUG_OFF, DEBUG_WARNINGS, DEBUG_NORM, DEBUG_EXTRA};
  p_default = {DEBUG_OFF};
  p_descr = "Debug option";
  p_help = "If set, debug messages will be printed appropriately";
} debug;

paramdef long {
  p_default = {0};
  p_min = {0};
  p_max = {3};
  p_descr = "Malloc debug level";
  p_help = "0 - none, 1 - corruption checking, 2 - records all malloc blocks and checks, 3 - printout of all mallocs etc.";
} malloc_debug_level;

paramdef char* {
  p_default = {"Test"};
  p_descr = "Process instance";
  p_help = "Used for registration with procmap.";
} instance;

paramdef char* {
  p_default = {"rdas_cal_data"};
  p_descr = "Input file for RDAS calibration data.";
  p_help = "This file is either produced manually, or written by dva_ingest.";
} rdas_cal_data_path;

paramdef char* {
  p_default = {"displace_table"};
  p_descr = "File path for displace table.";
  p_help = "This file is generated by dva_mklookup.";
} displace_table_file_path;

paramdef char* {
  p_default = {"vip2byte"};
  p_descr = "File path for vip2byte table.";
  p_help = "This file is generated by dva_mklookup.";
} vip2byte_table_file_path;

paramdef char* {
  p_default = {"range_correction"};
  p_descr = "File path for range_correction table.";
  p_help = "This file is generated by dva_mklookup.";
} range_correction_table_file_path;

paramdef char* {
  p_default = {"grids"};
  p_descr = "Input directory for grid files.";
  p_help = "These files are pre-computed by dva_mkgrid.";
} grid_files_dir;

paramdef char* {
  p_default = {"grid_params"};
  p_descr = "Path for grid params ASCII file.";
  p_help = "This file is created by dva_mkgrid.";
} grid_params_file_path;

paramdef char* {
  p_default = {"lookups"};
  p_descr = "Output directory for lookup files.";
  p_help = "This file is generated by dva_mklookup.";
} lookup_files_dir;

paramdef char* {
  p_default = {"radar_elevations"};
  p_descr = "Path for radar elevations ASCII file.";
  p_help = "This file is generated by dva_mklookup.";
} radar_elevations_file_path;

paramdef char* {
  p_default = {"null"};
  p_descr = "Dir name for input beam files.";
  p_help = "The beam files are placed in this directory by dva_ingest";
} beam_dir;

paramdef double {
  p_default = {360.0};
  p_min = {1.0};
  p_descr = "Max valid age of input files in realtime mode (secs)";
  p_help = "This the max valid age for an incoming file. The program will wait for a data file more recent than this.";
} max_realtime_valid_age;

paramdef char* {
  p_default = {"null"};
  p_descr = "Dir name for output files.";
  p_help = "The dohbson output files are placed in this directory.";
} output_dir;

paramdef char* {
  p_default = {"Unknown"};
  p_descr = "Radar name.";
} radar_name;

paramdef double {
  p_default = {0.0};
  p_min = {-2.0};
  p_max = {25.0};
  p_descr = "Radar altitude (km MSL)";
  p_help = "Check that this matches 'radar_altitude' in the dva_mkgrid param file.";
} radar_altitude;

paramdef double {
  p_default = {0.0};
  p_min = {-90.0};
  p_max = {90.0};
  p_descr = "Radar latitude";
  p_help = "Radar latitude (deg.decimal)";
} radar_latitude;

paramdef double {
  p_default = {0.0};
  p_min = {-180.0};
  p_max = {180.0};
  p_descr = "Radar longitude";
  p_help = "Radar longitude (deg.decimal)";
} radar_longitude;

paramdef long {
  p_default = {224};
  p_descr = "Number of gates per beam";
} gates_per_beam;

paramdef double {
  p_default = {1.0};
  p_min = {0.01};
  p_max = {45.0};
  p_descr = "Beam width";
  p_help = "Radar half-power beam width (deg)";
} beam_width;

paramdef long {
  p_default = {32};
  p_min = {1};
  p_descr = "Samples per beam";
  p_help = "Number of pulse samples used to compute data from a beam";
} samples_per_beam;

paramdef double {
  p_default = {2.0};
  p_min = {0.001};
  p_descr = "Pulse width";
  p_help = "Radar pulse width (microsecs)";
} pulse_width;

paramdef double {
  p_default = {250.0};
  p_min = {1.0};
  p_descr = "PRF";
  p_help = "Radar pulse repitition frequency (pulses per sec)";
} prf;

paramdef double {
  p_default = {10.0};
  p_min = {0.01};
  p_max = {1000.0};
  p_descr = "Wavelength";
  p_help = "Radar wavelength (cm)";
} wavelength;




