/****************************************************
 * TDRP params for kavm2mdv
 ****************************************************/

/*
 * Debug option.
 * If set, debug messages will be printed appropriately.
 *
 * Type: enum
 * Default: DEBUG_OFF 
 * Legal values: DEBUG_OFF, DEBUG_WARNINGS, DEBUG_NORM,
 *   DEBUG_EXTRA.
 */
debug = DEBUG_OFF;

/*
 * Malloc debug level.
 * 0 - none, 1 - corruption checking, 2 - records all malloc blocks
 *   and checks, 3 - printout of all mallocs etc.
 *
 * Type: long
 * Default: 0 
 * Min value: 0 
 * Max value: 3 
 */
malloc_debug_level = 0;

/*
 * Process instance.
 * Used for registration with procmap.
 *
 * Type: string
 * Default: "Test" 
 */
instance = "Test";

/*
 * Operational mode.
 * Realtime mode - waits for new data; archive mode runs on file
 *   list.
 *
 * Type: enum
 * Default: REALTIME 
 * Legal values: REALTIME, ARCHIVE.
 */
mode = ARCHIVE;

/*
 * Input file extension.
 *
 * Type: string
 * Default: "mcg" 
 */
input_file_ext = "mcg";

/*
 * Input directory.
 * Path of input directory - realtime mode only.
 *
 * Type: string
 * Default: "null" 
 */
input_dir = "null";

/*
 * Output file extension.
 *
 * Type: string
 * Default: "mdv" 
 */
output_file_ext = "mdv";

/*
 * Output directory.
 * Path of output directory.
 *
 * Type: string
 * Default: "null" 
 */
output_dir = "null";

/*
 * Output host name.
 * Host name for output files - set to 'local' for local host.
 *
 * Type: string
 * Default: "local" 
 */
output_host = "local";

/*
 * Local dir for tmp files.
 * If the output_host is not 'local', this must be set to a writeable
 *   directory.
 *
 * Type: string
 * Default: "/tmp" 
 */
local_tmp_dir = "/tmp";

/*
 * Output file type.
 * Can output MDV file or plain grid.
 *
 * Type: enum
 * Default: MDV 
 * Legal values: MDV, PLAIN.
 */
output_type = MDV;

/*
 * Data origin position.
 * Data origin - data may be output starting at bottom left corner
 *   (BOTLEFT) or top left corner (TOPLEFT).
 *
 * Type: enum
 * Default: BOTLEFT 
 * Legal values: BOTLEFT, TOPLEFT.
 */
output_data_origin = BOTLEFT;

/*
 * Option to output file with FORTRAN record markers.
 * If this is set, the output file will have a leading and trailing
 *   4-byte word indicating the array length. This allows FORTRAN
 *   to read the array as Unformatted Sequential.
 *
 * Type: boolean
 * Default: FALSE 
 */
fortran_output = FALSE;

/*
 * Max age of input data.
 * For realtime only - max age of input data for it to be valid.
 *
 * Type: long
 * Default: 300 
 * Min value: 60 
 */
max_input_data_age = 300;

/*
 * Delay before processing incoming file (sec).
 * Delay between finding new file and processing it - realtime
 *   only (sec).
 *
 * Type: long
 * Default: 10 
 * Min value: 0 
 * Max value: 300 
 */
processing_delay = 10;

/*
 * vip -> dbz lookup array.
 * Array for translating vip level into dBZ.
 *
 * Type: double
 * Array elem size: 8 bytes
 * Array has no max number of elements
 */
vip2dbz = { -25.0, 24.0, 36.0, 44.0, 48.0, 54.0, 60.0 };

/*
 * If set, kavouras grid is resampled onto grid specified by lon_grid
 *   and lat_grid. If not set, native grid is output.
 *
 * Type: boolean
 * Default: FALSE 
 */
resample_grid = TRUE;

/*
 * Resampled longitude grid params.
 *
 * Type: struct
 */
lon_grid = {
  -129.125, /* min:double */
     0.25,  /* delta:double */
   265      /* n:long */
};

/*
 * Resampled latitude grid params.
 *
 * Type: struct
 */
lat_grid = {
   14.1,  /* min:double */
    0.20, /* delta:double */
  250     /* n:long */
};

/*
 * Reflectivity threshold.
 * No data below this threshold is considered when creating output
 *   grid.
 *
 * Type: double
 * Default: 0 
 * Min value: -50 
 * Max value: 90 
 */
dbz_threshold = 10.0;

/*
 * Min fraction coverage for resampled grid.
 * The minimum fraction coverage for a given output grid area.
 *   If the coverage is less than this, the output is set to zero.
 *
 * Type: double
 * Default: 0 
 * Min value: 0 
 * Max value: 100 
 */
coverage_threshold = 0.5;

/*
 * Filter type.
 * The type of filter applied during resampling.
 *
 * Type: enum
 * Default: max_filter 
 * Legal values: max_filter, mean_filter.
 */
filter_type = max_filter;

/*
 * radar location - used for filling in MDV header info.
 *
 * Type: struct
 */
radar_loc = {
  0, /* lat:double */
  0, /* lon:double */
  0  /* alt:double */
};

/*
 * dataset name - used for filling in MDV header info.
 *
 * Type: string
 * Default: "Kavouras mosaic grid" 
 */
dataset_name = "Kavouras mosaic grid";


