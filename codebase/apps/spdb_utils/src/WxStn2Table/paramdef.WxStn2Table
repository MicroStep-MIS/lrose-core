/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
/* ** Copyright UCAR (c) 1990 - 2016                                         */
/* ** University Corporation for Atmospheric Research (UCAR)                 */
/* ** National Center for Atmospheric Research (NCAR)                        */
/* ** Boulder, Colorado, USA                                                 */
/* ** BSD licence applies - redistribution and use in source and binary      */
/* ** forms, with or without modification, are permitted provided that       */
/* ** the following conditions are met:                                      */
/* ** 1) If the software is modified to produce derivative works,            */
/* ** such modified software should be clearly marked, so as not             */
/* ** to confuse it with the version available from UCAR.                    */
/* ** 2) Redistributions of source code must retain the above copyright      */
/* ** notice, this list of conditions and the following disclaimer.          */
/* ** 3) Redistributions in binary form must reproduce the above copyright   */
/* ** notice, this list of conditions and the following disclaimer in the    */
/* ** documentation and/or other materials provided with the distribution.   */
/* ** 4) Neither the name of UCAR nor the names of its contributors,         */
/* ** if any, may be used to endorse or promote products derived from        */
/* ** this software without specific prior written permission.               */
/* ** DISCLAIMER: THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS  */
/* ** OR IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED      */
/* ** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.    */
/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
//////////////////////////////////////////////////////////////////////
// parameter definitions WxStn2Table
//
// EOL, NCAR,
// P.O.Box 3000, Boulder, CO, USA, 80307-3000
//
// April 2017
//
//////////////////////////////////////////////////////////////////////

commentdef {
  p_header = "WxStn2Table reads surface station entries from an SPDB data base, and based on the specified parameters in the parameter file, reformats these into a text table.";
}

commentdef {
  p_header = "DEBUGGING AND PROCESS CONTROL.";
}

typedef enum {
  DEBUG_OFF, DEBUG_NORM, DEBUG_VERBOSE, DEBUG_EXTRA
} debug_t;

paramdef enum debug_t {
  p_default = DEBUG_OFF;
  p_descr = "Debug option";
  p_help = "If set, debug messages will be printed appropriately";
} debug;

commentdef {
  p_header = "DATA INPUT";
};

paramdef string {
  p_default = "/tmp/spdb/test";
  p_descr = "URL to spdb data.";
  p_help = "This can either be (a) the path to the directory or (b) a url of the form 'spdbp:://hostname::dir'. For (a), if the path starts with '/' or '.', it will be treated as an absolute path. If not, it will be relative to DATA_DIR. For (b) the dir is relative to DATA_DIR on the host specified by hostname.";
} input_url;

paramdef string {
  p_default = "all";
  p_descr = "Names of stations to be included.";
  p_help = "This should be a valid station name. May be a comma-delimited list. If empty, or 'all', then all stations are printed.";
} station_names;

typedef struct {
  int year;
  int month;
  int day;
  int hour;
  int min;
  int sec;
} date_time_t;

paramdef struct date_time_t {
  p_default = { 2017, 01, 01, 00, 00, 00 };
  p_descr = "The start time for extracting the data";
  p_help = "Can be overridden by specifying -start on the command line.";
} start_time;

paramdef struct date_time_t {
  p_default = { 2017, 01, 02, 00, 00, 00 };
  p_descr = "The end time for extracting the data";
  p_help = "Can be overridden by specifying -end on the command line.";
} end_time;

commentdef {
  p_header = "Specify fields to be printed";
};

typedef enum {
  YEAR, MONTH, DAY, HOUR, MIN, SEC,
  UNIX_TIME_SECS, UNIX_TIME_DAYS,
  LATITUDE, LONGITUDE, ALTITUDE_M,
  TEMP_C, DEWPT_C, RH_PERCENT,
  WIND_DIRN_DEGT, WIND_SPEED_MPS, WIND_GUST_MPS,
  PRESSURE_HPA, LIQUID_ACCUM_MM, PRECIP_RATE_MM_PER_HR,
  VISIBILITY_KM, RVR_KM, CEILING_M
} field_name_t;

paramdef enum field_name_t {
  p_default = {
    YEAR, MONTH, DAY, HOUR, MIN, SEC,
    UNIX_TIME_SECS, UNIX_TIME_DAYS,
    LATITUDE, LONGITUDE, ALTITUDE_M,
    TEMP_C, DEWPT_C, RH_PERCENT,
    WIND_DIRN_DEGT, WIND_SPEED_MPS, WIND_GUST_MPS,
    PRESSURE_HPA, LIQUID_ACCUM_MM, PRECIP_RATE_MM_PER_HR,
    VISIBILITY_KM, RVR_KM, CEILING_M
  };
  p_descr = "List of fields to be printed";
  p_help = "Specify the fields you want. The first line in the file will start with #, followed by the field list.";
} fields[];

commentdef {
  p_header = "OPTIONAL BOUNDING BOX";
};

paramdef boolean {
  p_default = false;
  p_descr = "Apply a bounding box to the data.";
  p_help = "If set, only consider stations within the bounding box.";
} apply_bounding_box;

typedef struct {
  double min_lon;
  double max_lon;
  double min_lat;
  double max_lat;
} bounding_box_t;

paramdef struct bounding_box_t {
  p_default = { -180.0, 180.0, -90.0, 90.0 };
  p_descr = "Bounding box limits.";
  p_help = "See 'apply_bounding_box'. Longitude values should be between -180 and +180.";
} bounding_box;

commentdef {
  p_header = "OUTPUT DETAILS";
};

paramdef boolean {
  p_default = true;
  p_descr = "If true, write a commented header at the start of the output.";
} add_commented_header;

paramdef string {
  p_default = "#";
  p_descr = "Character at start of comment lines.";
  p_help = "Each comment line will be start with this character.";
} comment_character;

paramdef string {
  p_default = ",";
  p_descr = "Delimiter between columns.";
} column_delimiter;

