/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
/* ** Copyright UCAR (c) 1990 - 2016                                         */
/* ** University Corporation for Atmospheric Research (UCAR)                 */
/* ** National Center for Atmospheric Research (NCAR)                        */
/* ** Boulder, Colorado, USA                                                 */
/* ** BSD licence applies - redistribution and use in source and binary      */
/* ** forms, with or without modification, are permitted provided that       */
/* ** the following conditions are met:                                      */
/* ** 1) If the software is modified to produce derivative works,            */
/* ** such modified software should be clearly marked, so as not             */
/* ** to confuse it with the version available from UCAR.                    */
/* ** 2) Redistributions of source code must retain the above copyright      */
/* ** notice, this list of conditions and the following disclaimer.          */
/* ** 3) Redistributions in binary form must reproduce the above copyright   */
/* ** notice, this list of conditions and the following disclaimer in the    */
/* ** documentation and/or other materials provided with the distribution.   */
/* ** 4) Neither the name of UCAR nor the names of its contributors,         */
/* ** if any, may be used to endorse or promote products derived from        */
/* ** this software without specific prior written permission.               */
/* ** DISCLAIMER: THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS  */
/* ** OR IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED      */
/* ** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.    */
/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
/**********************************************************
 * paramdef.GenPolyStats2Ascii
 *
 * This file contains the TDRP parameter definitions for
 * GenPolyStats2Ascii.
 */

commentdef
{
  p_header = "GenPolyStats2Ascii";
  p_text = "This process reads polygons from a GenPoly statistics database "
           "and writes the statistics to stdout.  The GenPoly statistics "
           "database is generated using CIDD and DrawFmqPolygonStats.";
};

/***********************************************************************
 * Debugging
 */

commentdef
{
  p_header = "DEBUGGING PARAMETERS";
  p_text = "Parameters controlling debug outputs.";
};

paramdef boolean
{
  p_descr = "debug flag";
  p_help = "Debug flag.";
  p_default = false;
} debug;


/***********************************************************************
 * Process I/O.
 */

commentdef
{
  p_header = "PROCESS I/O PARAMETERS";
  p_text = "Parameters describing the input and output locations.";
};

paramdef string
{
  p_help = "TIME_LIST mode start time";
  p_default = "2005 1 1 0 0 0";
} start_time;

paramdef string
{
  p_help = "TIME_LIST mode end time";
  p_default = "2006 1 1 0 0 0";
} end_time;

paramdef string
{
  p_descr = "Input URL.";
  p_help = "URL for the input SPDB database.";
  p_default = "spdbp:://localhost::spdb/stn";
} input_url;

paramdef string
{
  p_descr = "Substring of the storm id for storms to include in output.";
  p_help = "If set to an empty string, all storms in the SPDB database "
           "will be included in the output. "
           "If set, only storms whose storm id contains this string will "
           "be included in the output.";
  p_default = "";
} storm_substring;

typedef struct
{
  string field_name;
  string field_label;
} field_info_t;

paramdef struct field_info_t
{
  p_descr = "List of fields to include in the output";
  p_help = "\tfield_name - The name of the field as it appears in the "
           "GenPoly database.\n"
           "\tfield_label - The label to use for this field. "
           "Set to an empty string to use the field name as the label.\n";
  p_default = { { "mean DBZ_F", "" },
                { "median DBZ_F", "" },
                { "max DBZ_F", "" },
                { "min DBZ_F", "" },
                { "std dev DBZ_F", "" },
                { "mean ZDR", "" },
                { "median ZDR", "" },
                { "max ZDR", "" },
                { "min ZDR", "" },
                { "std dev ZDR", "" } };
} output_fields[];

paramdef boolean
{
  p_descr = "Flag indicating whether to include the polygon time in the "
            "output.";
  p_help = "The polygon time is the time entered in the dialog box when the "
           "polygon was created. "
           "This is generally the same as the MDV volume time.";
  p_default = true;
} include_polygon_time;

paramdef string
{
  p_descr = "Label to use for the polygon time field.";
  p_help = "Used only if include_polygon_time is set to TRUE.";
  p_default = "Polygon time";
} polygon_time_label;

paramdef boolean
{
  p_descr = "Flag indicating whether to include the scan time in the "
            "output.";
  p_help = "The scan time is the time of the scan for this polygon within "
           "the volume. "
           "It is calculated assuming that each scan in the volume takes "
           "the same amount of time.";
  p_default = false;
} include_scan_time;

paramdef string
{
  p_descr = "Label to use for the scan time field.";
  p_help = "Used only if include_scan_time is set to TRUE.";
  p_default = "Scan time";
} scan_time_label;
