//
//
//
//
//

#include <stdio.h>

#include "Fault.h"
#include "DoradeBlock.h"
using namespace std;
using namespace ForayUtility;




//////////////////////////////////////////////////////////////////////
//
//
//
//////////////////////////////////////////////////////////////////////
DoradeBlock::DoradeBlock(){


}

//////////////////////////////////////////////////////////////////////
//
//
//
//////////////////////////////////////////////////////////////////////
DoradeBlock::~DoradeBlock(){


}

//////////////////////////////////////////////////////////////////////
//
//
//
//////////////////////////////////////////////////////////////////////
vector<int> DoradeBlock::getIntegerVector() throw (Fault){

    if(integerVector_.size() == 0){
	throw Fault("DoradeBlock::getDoubleVector : vector<double> is zero length.\n");
    }

    return integerVector_;
}


//////////////////////////////////////////////////////////////////////
//
//
//
//////////////////////////////////////////////////////////////////////
vector<double> DoradeBlock::getDoubleVector() throw (Fault){

    if(doubleVector_.size() == 0){
	throw Fault("DoradeBlock::getDoubleVector : vector<double> is zero length.\n");
    }

    return doubleVector_;

}

//////////////////////////////////////////////////////////////////////
//
//
//
//////////////////////////////////////////////////////////////////////
void  DoradeBlock::set_integer_vector(vector<int>    &vector)   throw(Fault){

    integerVector_ = vector;

}

//////////////////////////////////////////////////////////////////////
//
//
//
//////////////////////////////////////////////////////////////////////
void  DoradeBlock::set_double_vector (vector<double> &vector)   throw(Fault){

    doubleVector_ = vector;

}





