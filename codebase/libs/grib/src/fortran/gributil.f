C    *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 
C    ** Copyright UCAR (c) 1992 - 2010 
C    ** University Corporation for Atmospheric Research(UCAR) 
C    ** National Center for Atmospheric Research(NCAR) 
C    ** Research Applications Laboratory(RAL) 
C    ** P.O.Box 3000, Boulder, Colorado, 80307-3000, USA 
C    ** 2010/10/7 23:12:29 
C    *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 
C
C +------------------------------------------------------------------+
C
       SUBROUTINE W3FB06(ALAT,ALON,ALAT1,ALON1,DX,ALONV,XI,XJ)
C$$$   SUBPROGRAM  DOCUMENTATION  BLOCK
C
C SUBPROGRAM:  W3FB06        LAT/LON TO POLA (I,J) FOR GRIB
C   PRGMMR: STACKPOLE        ORG: NMC42       DATE:88-04-05
C
C ABSTRACT: CONVERTS THE COORDINATES OF A LOCATION ON EARTH GIVEN IN
C   THE NATURAL COORDINATE SYSTEM OF LATITUDE/LONGITUDE TO A GRID
C   COORDINATE SYSTEM OVERLAID ON A POLAR STEREOGRAPHIC MAP PRO-
C   JECTION TRUE AT 60 DEGREES N OR S LATITUDE. W3FB06 IS THE REVERSE
C   OF W3FB07. USES GRIB SPECIFICATION OF THE LOCATION OF THE GRID
C
C PROGRAM HISTORY LOG:
C   88-01-01  ORIGINAL AUTHOR:  STACKPOLE, W/NMC42
C
C USAGE:  CALL W3FB06 (ALAT,ALON,ALAT1,ALON1,DX,ALONV,XI,XJ)
C   INPUT ARGUMENT LIST:
C     ALAT     - LATITUDE IN DEGREES (NEGATIVE IN SOUTHERN HEMIS)
C     ALON     - EAST LONGITUDE IN DEGREES, REAL*4
C     ALAT1    - LATITUDE  OF LOWER LEFT POINT OF GRID (POINT (1,1))
C     ALON1    - LONGITUDE OF LOWER LEFT POINT OF GRID (POINT (1,1))
C                ALL REAL*4
C     DX       - MESH LENGTH OF GRID IN METERS AT 60 DEG LAT
C                 MUST BE SET NEGATIVE IF USING
C                 SOUTHERN HEMISPHERE PROJECTION.
C                   190500.0 LFM GRID,
C                   381000.0 NH PE GRID, -381000.0 SH PE GRID, ETC.
C     ALONV    - THE ORIENTATION OF THE GRID.  I.E.,
C                THE EAST LONGITUDE VALUE OF THE VERTICAL MERIDIAN
C                WHICH IS PARALLEL TO THE Y-AXIS (OR COLUMNS OF
C                OF THE GRID)ALONG WHICH LATITUDE INCREASES AS
C                THE Y-COORDINATE INCREASES.  REAL*4
C                   FOR EXAMPLE:
C                   255.0 FOR LFM GRID,
C                   280.0 NH PE GRID, 100.0 SH PE GRID, ETC.
C
C   OUTPUT ARGUMENT LIST:
C     XI       - I COORDINATE OF THE POINT SPECIFIED BY ALAT, ALON
C     XJ       - J COORDINATE OF THE POINT; BOTH REAL*4
C
C   REMARKS: FORMULAE AND NOTATION LOOSELY BASED ON HOKE, HAYES,
C     AND RENNINGER'S "MAP PROJECTIONS AND GRID SYSTEMS...", MARCH 1981
C     AFGWC/TN-79/003
C
C ATTRIBUTES:
C   LANGUAGE: IBM VS FORTRAN
C   MACHINE:  NAS
C
C$$$
C
         DATA  RERTH /6.3712E+6/, PI/3.1416/
         DATA  SS60 /1.86603/
C
C        PRELIMINARY VARIABLES AND REDIFINITIONS
C
C        H = 1 FOR NORTHERN HEMISPHERE; = -1 FOR SOUTHERN
C
C        REFLON IS LONGITUDE UPON WHICH THE POSITIVE X-COORDINATE
C        DRAWN THROUGH THE POLE AND TO THE RIGHT LIES
C        ROTATED AROUND FROM ORIENTATION (Y-COORDINATE) LONGITUDE
C        DIFFERENTLY IN EACH HEMISPHERE
C
         IF(DX.LT.0) THEN
           H = -1.
           DXL = -DX
           REFLON = ALONV - 90.
         ELSE
           H = 1.
           DXL = DX
           REFLON = ALONV - 270.
         ENDIF
C
         RADPD = PI/180.0
         REBYDX = RERTH/DXL
C
C        RADIUS TO LOWER LEFT HAND (LL) CORNER
C
         ALA1 =  ALAT1 * RADPD
         RMLL = REBYDX * COS(ALA1) * SS60/(1. + H * SIN(ALA1))
C
C        USE LL POINT INFO TO LOCATE POLE POINT
C
         ALO1 = (ALON1 - REFLON) * RADPD
         POLEI = 1. - RMLL * COS(ALO1)
         POLEJ = 1. - H * RMLL * SIN(ALO1)
C
C        RADIUS TO DESIRED POINT AND THE I J TOO
C
         ALA =  ALAT * RADPD
         RM = REBYDX * COS(ALA) * SS60/(1. + H * SIN(ALA))
C
         ALO = (ALON - REFLON) * RADPD
         XI = POLEI + RM * COS(ALO)
         XJ = POLEJ + H * RM * SIN(ALO)
C
      RETURN
      END
C
C +------------------------------------------------------------------+
C
       SUBROUTINE W3FB07(XI,XJ,ALAT1,ALON1,DX,ALONV,ALAT,ALON)
C$$$   SUBPROGRAM  DOCUMENTATION  BLOCK
C
C SUBPROGRAM:  W3FB07        GRID COORDS TO LAT/LON FOR GRIB
C   PRGMMR: STACKPOLE        ORG: NMC42       DATE:88-04-05
C
C ABSTRACT: CONVERTS THE COORDINATES OF A LOCATION ON EARTH GIVEN IN A
C   GRID COORDINATE SYSTEM OVERLAID ON A POLAR STEREOGRAPHIC MAP PRO-
C   JECTION TRUE AT 60 DEGREES N OR S LATITUDE TO THE
C   NATURAL COORDINATE SYSTEM OF LATITUDE/LONGITUDE
C   W3FB07 IS THE REVERSE OF W3FB06.
C   USES GRIB SPECIFICATION OF THE LOCATION OF THE GRID
C
C PROGRAM HISTORY LOG:
C   88-01-01  ORIGINAL AUTHOR:  STACKPOLE, W/NMC42
C
C USAGE:  CALL W3FB07(XI,XJ,ALAT1,ALON1,DX,ALONV,ALAT,ALON)
C   INPUT ARGUMENT LIST:
C     XI       - I COORDINATE OF THE POINT  REAL*4
C     XJ       - J COORDINATE OF THE POINT  REAL*4
C     ALAT1    - LATITUDE  OF LOWER LEFT POINT OF GRID (POINT 1,1)
C                LATITUDE <0 FOR SOUTHERN HEMISPHERE; REAL*4
C     ALON1    - LONGITUDE OF LOWER LEFT POINT OF GRID (POINT 1,1)
C                  EAST LONGITUDE USED THROUGHOUT; REAL*4
C     DX       - MESH LENGTH OF GRID IN METERS AT 60 DEG LAT
C                 MUST BE SET NEGATIVE IF USING
C                 SOUTHERN HEMISPHERE PROJECTION; REAL*4
C                   190500.0 LFM GRID,
C                   381000.0 NH PE GRID, -381000.0 SH PE GRID, ETC.
C     ALONV    - THE ORIENTATION OF THE GRID.  I.E.,
C                THE EAST LONGITUDE VALUE OF THE VERTICAL MERIDIAN
C                WHICH IS PARALLEL TO THE Y-AXIS (OR COLUMNS OF
C                THE GRID) ALONG WHICH LATITUDE INCREASES AS
C                THE Y-COORDINATE INCREASES.  REAL*4
C                   FOR EXAMPLE:
C                   255.0 FOR LFM GRID,
C                   280.0 NH PE GRID, 100.0 SH PE GRID, ETC.
C
C   OUTPUT ARGUMENT LIST:
C     ALAT     - LATITUDE IN DEGREES (NEGATIVE IN SOUTHERN HEMI.)
C     ALON     - EAST LONGITUDE IN DEGREES, REAL*4
C
C   REMARKS: FORMULAE AND NOTATION LOOSELY BASED ON HOKE, HAYES,
C     AND RENNINGER'S "MAP PROJECTIONS AND GRID SYSTEMS...", MARCH 1981
C     AFGWC/TN-79/003
C
C ATTRIBUTES:
C   LANGUAGE: IBM VS FORTRAN
C   MACHINE:  NAS
C
C$$$
C
         DATA  RERTH /6.3712E+6/,PI/3.1416/
         DATA  SS60 /1.86603/
C
C        PRELIMINARY VARIABLES AND REDIFINITIONS
C
C        H = 1 FOR NORTHERN HEMISPHERE; = -1 FOR SOUTHERN
C
C        REFLON IS LONGITUDE UPON WHICH THE POSITIVE X-COORDINATE
C        DRAWN THROUGH THE POLE AND TO THE RIGHT LIES
C        ROTATED AROUND FROM ORIENTATION (Y-COORDINATE) LONGITUDE
C        DIFFERENTLY IN EACH HEMISPHERE
C
         IF(DX.LT.0) THEN
           H = -1.
           DXL = -DX
           REFLON = ALONV - 90.
         ELSE
           H = 1.
           DXL = DX
           REFLON = ALONV - 270.
         ENDIF
C
         RADPD = PI/180.0
         DEGPRD = 180./PI
         REBYDX = RERTH/DXL
C
C        RADIUS TO LOWER LEFT HAND (LL) CORNER
C
         ALA1 =  ALAT1 * RADPD
         RMLL = REBYDX * COS(ALA1) * SS60/(1. + H * SIN(ALA1))
C
C        USE LL POINT INFO TO LOCATE POLE POINT
C
         ALO1 = (ALON1 - REFLON) * RADPD
         POLEI = 1. - RMLL * COS(ALO1)
         POLEJ = 1. - H * RMLL * SIN(ALO1)
C
C        RADIUS TO THE I,J POINT (IN GRID UNITS)
C
         XX =  XI - POLEI
         YY = (XJ - POLEJ) * H
         R2 =  XX**2 + YY**2
C
C        NOW THE MAGIC FORMULAE
C
         IF(R2.EQ.0) THEN
           ALAT = H * 90.
           ALON = REFLON
         ELSE
           GI2 = (REBYDX * SS60)**2
           ALAT = DEGPRD * H * ASIN((GI2 - R2)/(GI2 + R2))
           ARCCOS = ACOS(XX/SQRT(R2))
           IF(YY.GT.0) THEN
             ALON = REFLON + DEGPRD * ARCCOS
           ELSE
             ALON = REFLON - DEGPRD * ARCCOS
           ENDIF
         ENDIF
         IF(ALON.LT.0) ALON = ALON + 360.
C
      RETURN
      END
C
C +------------------------------------------------------------------+
C
       SUBROUTINE W3FB08(ALAT,ALON,ALAT1,ALON1,ALATIN,DX,XI,XJ)
C$$$   SUBPROGRAM  DOCUMENTATION  BLOCK
C
C SUBPROGRAM:  W3FB08        LAT/LON TO MERC (I,J) FOR GRIB
C   PRGMMR: STACKPOLE        ORG: NMC42       DATE:88-04-05
C
C ABSTRACT: CONVERTS A LOCATION ON EARTH GIVEN IN
C   THE COORDINATE SYSTEM OF LATITUDE/LONGITUDE TO AN (I,J)
C   COORDINATE SYSTEM OVERLAID ON A MERCATOR MAP PROJECTION
C   W3FB08 IS THE REVERSE OF W3FB09
C   USES GRIB SPECIFICATION OF THE LOCATION OF THE GRID
C
C PROGRAM HISTORY LOG:
C   88-03-01  ORIGINAL AUTHOR:  STACKPOLE, W/NMC42
C
C USAGE:  CALL W3FB08 (ALAT,ALON,ALAT1,ALON1,ALATIN,DX,XI,XJ)
C   INPUT ARGUMENT LIST:
C     ALAT     - LATITUDE IN DEGREES (NEGATIVE IN SOUTHERN HEMIS)
C     ALON     - EAST LONGITUDE IN DEGREES, REAL*4
C     ALAT1    - LATITUDE  OF LOWER LEFT CORNER OF GRID (POINT (1,1))
C     ALON1    - LONGITUDE OF LOWER LEFT CORNER OF GRID (POINT (1,1))
C                ALL REAL*4
C     ALATIN   - THE LATITUDE AT WHICH THE MERCATOR CYLINDER
C                INTERSECTS THE EARTH
C     DX       - MESH LENGTH OF GRID IN METERS AT ALATIN
C
C   OUTPUT ARGUMENT LIST:
C     XI       - I COORDINATE OF THE POINT SPECIFIED BY ALAT, ALON
C     XJ       - J COORDINATE OF THE POINT; BOTH REAL*4
C
C   REMARKS: FORMULAE AND NOTATION LOOSELY BASED ON HOKE, HAYES,
C     AND RENNINGER'S "MAP PROJECTIONS AND GRID SYSTEMS...", MARCH 1981
C     AFGWC/TN-79/003
C
C ATTRIBUTES:
C   LANGUAGE: IBM VS FORTRAN
C   MACHINE:  NAS
C
C$$$
C
         DATA  RERTH /6.3712E+6/, PI/3.1416/
C
C        PRELIMINARY VARIABLES AND REDIFINITIONS
C
         RADPD = PI/180.0
         DEGPR = 180.0/PI
         CLAIN = COS(RADPD*ALATIN)
         DELLON = DX/(RERTH*CLAIN)
C
C        GET DISTANCE FROM EQUATOR TO ORIGIN ALAT1
C
         DJEO = 0.
         IF(ALAT1.NE.0.)
     1     DJEO = (ALOG(TAN(0.5*((ALAT1+90.0)*RADPD))))/DELLON
C
C        NOW THE I AND J COORDINATES
C
         XI = 1. + ((ALON - ALON1)/(DELLON*DEGPR))
         XJ = 1. + (ALOG(TAN(0.5*((ALAT + 90.) * RADPD))))/
     1               DELLON
     2           - DJEO
C
      RETURN
      END
C
C +------------------------------------------------------------------+
C
       SUBROUTINE W3FB09(XI,XJ,ALAT1,ALON1,ALATIN,DX,ALAT,ALON)
C$$$   SUBPROGRAM  DOCUMENTATION  BLOCK
C
C SUBPROGRAM:  W3FB09        MERC (I,J) TO LAT/LON FOR GRIB
C   PRGMMR: STACKPOLE        ORG: NMC42       DATE:88-04-05
C
C ABSTRACT: CONVERTS A LOCATION ON EARTH GIVEN IN
C   AN I,J COORDINATE SYSTEM OVERLAID ON A MERCATOR MAP PROJECTION
C   TO THE COORDINATE SYSTEM OF LATITUDE/LONGITUDE
C   W3FB09 IS THE REVERSE OF W3FB08
C   USES GRIB SPECIFICATION OF THE LOCATION OF THE GRID
C
C PROGRAM HISTORY LOG:
C   88-03-01  ORIGINAL AUTHOR:  STACKPOLE, W/NMC42
C
C USAGE:  CALL W3FB09 (XI,XJ,ALAT1,ALON1,ALATIN,DX,ALAT,ALON)
C   INPUT ARGUMENT LIST:
C     XI       - I COORDINATE OF THE POINT
C     XJ       - J COORDINATE OF THE POINT; BOTH REAL*4
C     ALAT1    - LATITUDE  OF LOWER LEFT CORNER OF GRID (POINT (1,1))
C     ALON1    - LONGITUDE OF LOWER LEFT CORNER OF GRID (POINT (1,1))
C                ALL REAL*4
C     ALATIN   - THE LATITUDE AT WHICH THE MERCATOR CYLINDER
C                INTERSECTS THE EARTH
C     DX       - MESH LENGTH OF GRID IN METERS AT ALATIN
C
C   OUTPUT ARGUMENT LIST:
C     ALAT     - LATITUDE IN DEGREES (NEGATIVE IN SOUTHERN HEMIS)
C     ALON     - EAST LONGITUDE IN DEGREES, REAL*4
C              - OF THE POINT SPECIFIED BY (I,J)
C
C   REMARKS: FORMULAE AND NOTATION LOOSELY BASED ON HOKE, HAYES,
C     AND RENNINGER'S "MAP PROJECTIONS AND GRID SYSTEMS...", MARCH 1981
C     AFGWC/TN-79/003
C
C ATTRIBUTES:
C   LANGUAGE: IBM VS FORTRAN
C   MACHINE:  NAS
C
C$$$
C
         DATA  RERTH /6.3712E+6/, PI/3.1416/
C
C        PRELIMINARY VARIABLES AND REDIFINITIONS
C
         RADPD = PI/180.0
         DEGPR = 180.0/PI
         CLAIN = COS(RADPD*ALATIN)
         DELLON = DX/(RERTH*CLAIN)
C
C        GET DISTANCE FROM EQUATOR TO ORIGIN ALAT1
C
         DJEO = 0.
         IF(ALAT1.NE.0.)
     1     DJEO = (ALOG(TAN(0.5*((ALAT1+90.0)*RADPD))))/DELLON
C
C        NOW THE LAT AND LON
C
         ALAT = 2.0*ATAN(EXP(DELLON*(DJEO + XJ-1.)))*DEGPR - 90.0
         ALON = (XI-1.) * DELLON *DEGPR + ALON1
C
      RETURN
      END
C
C +------------------------------------------------------------------+
C
       SUBROUTINE W3FB11(ALAT,ELON,ALAT1,ELON1,DX,ELONV,ALATAN,XI,XJ)
C$$$   SUBPROGRAM  DOCUMENTATION  BLOCK
C
C SUBPROGRAM:  W3FB11        LAT/LON TO LAMBERT(I,J) FOR GRIB
C   PRGMMR: STACKPOLE        ORG: NMC42       DATE:88-11-28
C
C ABSTRACT: CONVERTS THE COORDINATES OF A LOCATION ON EARTH GIVEN IN
C   THE NATURAL COORDINATE SYSTEM OF LATITUDE/LONGITUDE TO A GRID
C   COORDINATE SYSTEM OVERLAID ON A LAMBERT CONFORMAL TANGENT CONE
C   PROJECTION TRUE AT A GIVEN N OR S LATITUDE. W3FB11 IS THE REVERSE
C   OF W3FB12. USES GRIB SPECIFICATION OF THE LOCATION OF THE GRID
C
C PROGRAM HISTORY LOG:
C   88-11-25  ORIGINAL AUTHOR:  STACKPOLE, W/NMC42
C
C USAGE:  CALL W3FB11 (ALAT,ELON,ALAT1,ELON1,DX,ELONV,ALATAN,XI,XJ)
C   INPUT ARGUMENT LIST:
C     ALAT     - LATITUDE IN DEGREES (NEGATIVE IN SOUTHERN HEMIS)
C     ELON     - EAST LONGITUDE IN DEGREES, REAL*4
C     ALAT1    - LATITUDE  OF LOWER LEFT POINT OF GRID (POINT (1,1))
C     ELON1    - LONGITUDE OF LOWER LEFT POINT OF GRID (POINT (1,1))
C                ALL REAL*4
C     DX       - MESH LENGTH OF GRID IN METERS AT TANGENT LATITUDE
C     ELONV    - THE ORIENTATION OF THE GRID.  I.E.,
C                THE EAST LONGITUDE VALUE OF THE VERTICAL MERIDIAN
C                WHICH IS PARALLEL TO THE Y-AXIS (OR COLUMNS OF
C                OF THE GRID) ALONG WHICH LATITUDE INCREASES AS
C                THE Y-COORDINATE INCREASES.  REAL*4
C                THIS IS ALSO THE MERIDIAN (ON THE BACK SIDE OF THE
C                TANGENT CONE) ALONG WHICH THE CUT IS MADE TO LAY
C                THE CONE FLAT.
C     ALATAN   - THE LATITUDE AT WHICH THE LAMBERT CONE IS TANGENT TO
C                (TOUCHING) THE SPHERICAL EARTH.
C                 SET NEGATIVE TO INDICATE A
C                 SOUTHERN HEMISPHERE PROJECTION.
C
C   OUTPUT ARGUMENT LIST:
C     XI       - I COORDINATE OF THE POINT SPECIFIED BY ALAT, ELON
C     XJ       - J COORDINATE OF THE POINT; BOTH REAL*4
C
C   REMARKS: FORMULAE AND NOTATION LOOSELY BASED ON HOKE, HAYES,
C     AND RENNINGER'S "MAP PROJECTIONS AND GRID SYSTEMS...", MARCH 1981
C     AFGWC/TN-79/003
C
C ATTRIBUTES:
C   LANGUAGE: IBM VS FORTRAN
C   MACHINE:  NAS
C
C$$$
C
         DATA  RERTH /6.3712E+6/, PI/3.14159/
C
C        PRELIMINARY VARIABLES AND REDIFINITIONS
C
C        H = 1 FOR NORTHERN HEMISPHERE; = -1 FOR SOUTHERN
C
         IF(ALATAN.GT.0) THEN
           H = 1.
         ELSE
           H = -1.
         ENDIF
C
         RADPD = PI/180.0
         REBYDX = RERTH/DX
         ALATN1 = ALATAN * RADPD
         AN = H * SIN(ALATN1)
         COSLTN = COS(ALATN1)
C
C        MAKE SURE THAT INPUT LONGITUDES DO NOT PASS THROUGH
C        THE CUT ZONE (FORBIDDEN TERRITORY) OF THE FLAT MAP
C        AS MEASURED FROM THE VERTICAL (REFERENCE) LONGITUDE.
C
         ELON1L = ELON1
         IF((ELON1 - ELONV).GT.180.)
     &     ELON1L = ELON1 - 360.
         IF((ELON1 - ELONV).LT.(-180.))
     &     ELON1L = ELON1 + 360.
C
         ELONL = ELON
         IF((ELON  - ELONV).GT.180.)
     &     ELONL  = ELON  - 360.
         IF((ELON - ELONV).LT.(-180.))
     &     ELONL = ELON + 360.
C
         ELONVR = ELONV *RADPD
C
C        RADIUS TO LOWER LEFT HAND (LL) CORNER
C
         ALA1 =  ALAT1 * RADPD
         RMLL = REBYDX * (((COSLTN)**(1.-AN))*(1.+AN)**AN) *
     &           (((COS(ALA1))/(1.+H*SIN(ALA1)))**AN)/AN
C
C        USE LL POINT INFO TO LOCATE POLE POINT
C
         ELO1 = ELON1L * RADPD
         ARG = AN * (ELO1-ELONVR)
         POLEI = 1. - H * RMLL * SIN(ARG)
         POLEJ = 1. + RMLL * COS(ARG)
C
C        RADIUS TO DESIRED POINT AND THE I J TOO
C
         ALA =  ALAT * RADPD
         RM = REBYDX * ((COSLTN**(1.-AN))*(1.+AN)**AN) *
     &           (((COS(ALA))/(1.+H*SIN(ALA)))**AN)/AN
C
         ELO = ELONL * RADPD
         ARG = AN*(ELO-ELONVR)
         XI = POLEI + H * RM * SIN(ARG)
         XJ = POLEJ - RM * COS(ARG)
C
C        IF COORDINATE LESS THAN 1
C        COMPENSATE FOR ORIGIN AT (1,1)
C
         IF(XI.LT.1.)  XI = XI - 1.
         IF(XJ.LT.1.)  XJ = XJ - 1.
C
      RETURN
      END
C
C +------------------------------------------------------------------+
C
       SUBROUTINE W3FB12(XI,XJ,ALAT1,ELON1,DX,ELONV,ALATAN,ALAT,ELON,
     &                               IERR)
C$$$   SUBPROGRAM  DOCUMENTATION  BLOCK
C
C SUBPROGRAM:  W3FB12        LAMBERT(I,J) TO LAT/LON FOR GRIB
C   PRGMMR: STACKPOLE        ORG: NMC42       DATE:88-11-28
C
C ABSTRACT: CONVERTS THE COORDINATES OF A LOCATION ON EARTH GIVEN IN A
C   GRID COORDINATE SYSTEM OVERLAID ON A LAMBERT CONFORMAL TANGENT
C   CONE PROJECTION TRUE AT A GIVEN N OR S LATITUDE TO THE
C   NATURAL COORDINATE SYSTEM OF LATITUDE/LONGITUDE
C   W3FB12 IS THE REVERSE OF W3FB11.
C   USES GRIB SPECIFICATION OF THE LOCATION OF THE GRID
C
C PROGRAM HISTORY LOG:
C   88-11-25  ORIGINAL AUTHOR:  STACKPOLE, W/NMC42
C
C USAGE:  CALL W3FB12(XI,XJ,ALAT1,ELON1,DX,ELONV,ALATAN,ALAT,ELON,IERR,
C                                   IERR)
C   INPUT ARGUMENT LIST:
C     XI       - I COORDINATE OF THE POINT  REAL*4
C     XJ       - J COORDINATE OF THE POINT  REAL*4
C     ALAT1    - LATITUDE  OF LOWER LEFT POINT OF GRID (POINT 1,1)
C                LATITUDE <0 FOR SOUTHERN HEMISPHERE; REAL*4
C     ELON1    - LONGITUDE OF LOWER LEFT POINT OF GRID (POINT 1,1)
C                  EAST LONGITUDE USED THROUGHOUT; REAL*4
C     DX       - MESH LENGTH OF GRID IN METERS AT TANGENT LATITUDE
C     ELONV    - THE ORIENTATION OF THE GRID.  I.E.,
C                THE EAST LONGITUDE VALUE OF THE VERTICAL MERIDIAN
C                WHICH IS PARALLEL TO THE Y-AXIS (OR COLUMNS OF
C                THE GRID) ALONG WHICH LATITUDE INCREASES AS
C                THE Y-COORDINATE INCREASES.  REAL*4
C                THIS IS ALSO THE MERIDIAN (ON THE OTHER SIDE OF THE
C                TANGENT CONE) ALONG WHICH THE CUT IS MADE TO LAY
C                THE CONE FLAT.
C     ALATAN   - THE LATITUDE AT WHICH THE LAMBERT CONE IS TANGENT TO
C                (TOUCHES OR OSCULATES) THE SPHERICAL EARTH.
C                 SET NEGATIVE TO INDICATE A
C                 SOUTHERN HEMISPHERE PROJECTION; REAL*4
C
C   OUTPUT ARGUMENT LIST:
C     ALAT     - LATITUDE IN DEGREES (NEGATIVE IN SOUTHERN HEMI.)
C     ELON     - EAST LONGITUDE IN DEGREES, REAL*4
C     IERR     - .EQ. 0   IF NO PROBLEM
C                .GE. 1   IF THE REQUESTED XI,XJ POINT IS IN THE
C                         FORBIDDEN ZONE, I.E. OFF THE LAMBERT MAP
C                         IN THE OPEN SPACE WHERE THE CONE IS CUT.
C                  IF IERR.GE.1 THEN ALAT=999. AND ELON=999.
C
C   REMARKS: FORMULAE AND NOTATION LOOSELY BASED ON HOKE, HAYES,
C     AND RENNINGER'S "MAP PROJECTIONS AND GRID SYSTEMS...", MARCH 1981
C     AFGWC/TN-79/003
C
C ATTRIBUTES:
C   LANGUAGE: IBM VS FORTRAN
C   MACHINE:  NAS
C
C$$$
C
         LOGICAL NEWMAP
         DATA  RERTH /6.3712E+6/, PI/3.14159/, OLDRML/99999./
C
C        PRELIMINARY VARIABLES AND REDIFINITIONS
C
C        H = 1 FOR NORTHERN HEMISPHERE; = -1 FOR SOUTHERN
C
         IF(ALATAN.GT.0) THEN
           H = 1.
         ELSE
           H = -1.
         ENDIF
C
         PIBY2 = PI/2.
         RADPD = PI/180.0
         DEGPRD = 1./RADPD
         REBYDX = RERTH/DX
         ALATN1 = ALATAN * RADPD
         AN = H * SIN(ALATN1)
         COSLTN = COS(ALATN1)
C
C        MAKE SURE THAT INPUT LONGITUDE DOES NOT PASS THROUGH
C        THE CUT ZONE (FORBIDDEN TERRITORY) OF THE FLAT MAP
C        AS MEASURED FROM THE VERTICAL (REFERENCE) LONGITUDE
C
         ELON1L = ELON1
         IF((ELON1-ELONV).GT.180.)
     &     ELON1L = ELON1 - 360.
         IF((ELON1-ELONV).LT.(-180.))
     &     ELON1L = ELON1 + 360.
C
         ELONVR = ELONV * RADPD
C
C        RADIUS TO LOWER LEFT HAND (LL) CORNER
C
         ALA1 =  ALAT1 * RADPD
         RMLL = REBYDX * ((COSLTN**(1.-AN))*(1.+AN)**AN) *
     &           (((COS(ALA1))/(1.+H*SIN(ALA1)))**AN)/AN
C
C        USE RMLL TO TEST IF MAP AND GRID UNCHANGED FROM PREVIOUS
C        CALL TO THIS CODE.  THUS AVOID UNNEEDED RECOMPUTATIONS.
C
         IF(RMLL.EQ.OLDRML) THEN
           NEWMAP = .FALSE.
         ELSE
           NEWMAP = .TRUE.
           OLDRML = RMLL
C
C          USE LL POINT INFO TO LOCATE POLE POINT
C
           ELO1 = ELON1L * RADPD
           ARG = AN * (ELO1-ELONVR)
           POLEI = 1. - H * RMLL * SIN(ARG)
           POLEJ = 1. + RMLL * COS(ARG)
         ENDIF
C
C        RADIUS TO THE I,J POINT (IN GRID UNITS)
C              YY REVERSED SO POSITIVE IS DOWN
C
         XX = XI - POLEI
         YY = POLEJ - XJ
         R2 = XX**2 + YY**2
C
C        CHECK THAT THE REQUESTED I,J IS NOT IN THE FORBIDDEN ZONE
C           YY MUST BE POSITIVE UP FOR THIS TEST
C
         THETA = PI*(1.-AN)
         BETA = ABS(ATAN2(XX,-YY))
         IERR = 0
         IF(BETA.LE.THETA) THEN
           IERR = 1
           ALAT = 999.
           ELON = 999.
           IF(.NOT.NEWMAP)  RETURN
         ENDIF
C
C        NOW THE MAGIC FORMULAE
C
         IF(R2.EQ.0) THEN
           ALAT = H * 90.
           ELON = ELONV
         ELSE
C
C          FIRST THE LONGITUDE
C
           ELON = ELONV + DEGPRD * ATAN2(H*XX,YY)/AN
           ELON = AMOD(ELON+360., 360.)
C
C          NOW THE LATITUDE
C          RECALCULATE THE THING ONLY IF MAP IS NEW SINCE LAST TIME
C
           IF(NEWMAP) THEN
             ANINV = 1./AN
             ANINV2 = ANINV/2.
             THING = ((AN/REBYDX) ** ANINV)/
     &         ((COSLTN**((1.-AN)*ANINV))*(1.+ AN))
           ENDIF
           ALAT = H*(PIBY2 - 2.*ATAN(THING*(R2**ANINV2)))*DEGPRD
         ENDIF
C
C        FOLLOWING TO ASSURE ERROR VALUES IF FIRST TIME THRU
C         IS OFF THE MAP
C
         IF(IERR.NE.0) THEN
           ALAT = 999.
           ELON = 999.
           IERR = 2
         ENDIF
         RETURN
         END
C
C +------------------------------------------------------------------+
C
       SUBROUTINE W3FC00(U,V,NDIR,NSPD)
C$$$   SUBPROGRAM  DOCUMENTATION  BLOCK
C
C SUBPROGRAM: W3FC00   WIND DIR/SPEED FROM EARTH ORIENTED COMPONENTS
C   AUTHOR: ALLARD,MCCLESS   ORG: W342       DATE: 73-01-17
C
C ABSTRACT: COMPUTES WIND DIRECTION (NORTH ORIENTED) AND WIND SPEED
C   AT A POINT FROM THE EARTH ORIENTED U AND V COMPONENTS. W3FC00 IS
C   THE REVERSE OF W3FC01.
C
C PROGRAM HISTORY LOG:
C   73-01-17  R.ALLARD
C   91-03-05  R.E.JONES  CHANGE TO IF, THEN, ELSE
C
C USAGE:  CALL W3FC00 (U, V, NDIR, NSPD)
C
C   INPUT VARIABLES:
C     NAMES  INTERFACE DESCRIPTION OF VARIABLES AND TYPES
C     ------ --------- -----------------------------------------------
C     U      ARG LIST  WESTERLY WIND COMPONENT (REAL, FLOATING POINT)
C     V      ARG LIST  SOUTHERLY WIND COMPONENT (REAL, FLOATING POINT)
C
C   OUTPUT VARIABLES:
C     NAMES  INTERFACE DESCRIPTION OF VARIABLES AND TYPES
C     ------ --------- -----------------------------------------------
C     NDIR   ARG LIST  WIND DIRECTION IN TENS OF DEGREES (INTEGER)
C     NSPD   ARG LIST  WIND SPEED TO NEAREST UNIT AS THAT OF U & V
C                      (INTEGER)
C
C   SUBPROGRAMS CALLED:
C     NAMES                                                   LIBRARY
C     ------------------------------------------------------- --------
C     ATAN2  SQRT                                             SYSTEM
C
C ATTRIBUTES:
C   LANGUAGE: IBM VS FORTRAN
C   MACHINE:  NAS-9050, 9070, 9080, AS/EX-50.
C
C   FOR DETAILS OBTAIN WRITEUP FROM NMC/AD/SAB
C
C$$$
C
      NSPD = SQRT(U * U + V * V) + 0.5
C
      IF (NSPD.NE.0) THEN
        NDIR = ATAN2(U,V) * 5.729578 + 18.5
      ELSE
        NDIR = 0
      END IF
C
      RETURN
      END
C
C +------------------------------------------------------------------+
C
      SUBROUTINE W3FC05(U, V, DIR, SPD)
C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C                .      .    .                                       .
C SUBPROGRAM:  W3FC05        EARTH U,V WIND COMPONENTS TO DIR AND SPD
C   PRGMMR: CHASE            ORG: NMC421      DATE:88-10-26
C
C ABSTRACT: GIVEN THE TRUE (EARTH ORIENTED) WIND COMPONENTS
C   COMPUTE THE WIND DIRECTION AND SPEED.
C   INPUT WINDS AT THE POLE ARE ASSUMED TO FOLLOW THE WMO
C   CONVENTIONS, WITH THE OUTPUT DIRECTION COMPUTED IN ACCORDANCE
C   WITH WMO STANDARDS FOR REPORTING WINDS AT THE POLE.
C   (SEE OFFICE NOTE 241 FOR WMO DEFINITION.)
C
C PROGRAM HISTORY LOG:
C   81-12-30  STACKPOLE, JOHN
C   88-10-19  CHASE, P.   ALLOW OUTPUT VALUES TO OVERLAY INPUT
C   91-03-05  R.E.JONES   CHANGE TO MORE STANDARD FORTRAN
C
C USAGE:    CALL W3FC05 (U, V, DIR, SPD)
C
C   INPUT ARGUMENT LIST:
C     U        - REAL   EARTH-ORIENTED U-COMPONENT
C     V        - REAL   EARTH-ORIENTED V-COMPONENT
C
C   OUTPUT ARGUMENT LIST:      (INCLUDING WORK ARRAYS)
C     DIR      - REAL   WIND DIRECTION, DEGREES.  VALUES WILL
C                BE FROM 0 TO 360 INCLUSIVE.
C     SPD      - REAL   WIND SPEED IN SAME UNITS AS INPUT
C
C   INPUT FILES:   NONE
C
C   OUTPUT FILES:   NONE
C
C   SUBPROGRAMS CALLED:
C     LIBRARY:
C       COMMON   - SQRT, ATAN2
C
C REMARKS:  IF SPEED IS LESS THAN 1E-10 THEN DIRECTION WILL BE SET
C   TO ZERO.
C
C ATTRIBUTES:
C   LANGUAGE: IBM370 VS FORTRAN
C   MACHINE:  NAS
C
C$$$
C
C     VARIABLES.....
C
      REAL   U, V, DIR, SPD, XSPD
C
C     CONSTANTS.....

      DATA  SPDTST/1.0E-10/
      DATA  RTOD  /57.2957795/
      DATA  DCHALF/180.0/

      XSPD = SQRT(U * U + V * V)
      IF (XSPD .LT. SPDTST) THEN
         DIR = 0.0
      ELSE
         DIR = ATAN2(U,V) * RTOD + DCHALF
      ENDIF
      SPD = XSPD
      RETURN
      END
C
C +------------------------------------------------------------------+
C
      SUBROUTINE W3FC07(FFID, FFJD, FGU, FGV, FU, FV)
C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C
C SUBPROGRAM:  W3FC07        GRID U-V TO EARTH U-V IN NORTH HEM.
C   PRGMMR: CHASE            ORG: NMC421      DATE:88-10-26
C
C ABSTRACT: GIVEN THE GRID-ORIENTED WIND COMPONENTS ON A NORTHERN
C   HEMISPHERE POLAR STEREOGRAPHIC GRID POINT, COMPUTE THE EARTH-
C   ORIENTED WIND COMPONENTS AT THAT POINT.  IF THE INPUT WINDS
C   ARE AT THE NORTH POLE, THE OUTPUT COMPONENTS WILL BE MADE
C   CONSISTENT WITH THE WMO STANDARDS FOR REPORTING WINDS AT THE
C   NORTH POLE.  (SEE OFFICE NOTE 241 FOR WMO DEFINITION.)
C
C PROGRAM HISTORY LOG:
C   81-12-30  STACKPOLE, J. D.
C   88-10-13  CHASE, P.   ALLOW INPUT AND OUTPUT TO BE THE SAME
C   91-03-05  R.E.JONES   CHANGE TO MORE STANDARD FORTRAN
C
C USAGE:    CALL W3FC07 (FFID, FFJD, FGU, FGV, FU, FV)
C
C   INPUT ARGUMENT LIST:
C     FFID     - REAL*4 I-DISPLACEMENT FROM POINT TO NORTH POLE
C     FFJD     - REAL*4 J-DISPLACEMENT FROM POINT TO NORTH POLE
C     FGU      - REAL*4 GRID-ORIENTED U-COMPONENT
C     FGV      - REAL*4 GRID-ORIENTED V-COMPONENT
C
C   OUTPUT ARGUMENT LIST:
C     FU       - REAL*4 EARTH-ORIENTED U-COMPONENT, POSITIVE FROM WEST
C                MAY REFERENCE THE SAME LOCATION AS FGU.
C     FV       - REAL*4 EARTH-ORIENTED V-COMPONENT, POSITIVE FROM SOUTH
C                MAY REFERENCE THE SAME LOCATION AS FGV.
C
C   SUBPROGRAMS CALLED:
C     LIBRARY:
C       COMMON - SQRT
C
C REMARKS:  CALCULATE FFID AND FFJD AS FOLLOWS...
C         FFID = REAL(IP - I)
C         FFJD = REAL(JP - J)
C   WHERE (IP,JP) IS THE GRID COORDINATES OF THE NORTH POLE AND
C   (I,J) IS THE GRID COORDINATES OF THE POINT WHERE FGU AND FGV
C   OCCUR.
C        SEE W3FC11 FOR A SOUTHERN HEMISPHERE COMPANION SUBROUTINE.
C
C ATTRIBUTES:
C   LANGUAGE: IBM370 VS FORTRAN
C   MACHINE:  NAS
C
C$$$
C
      DATA  COS80 / 0.1736482 /
      DATA  SIN80 / 0.9848078 /
C
C     COS80 AND SIN80 ARE FOR WIND AT POLE
C     (USED FOR CO-ORDINATE ROTATION TO EARTH ORIENTATION)
C
      DFP = SQRT(FFID * FFID + FFJD * FFJD)
      IF (DFP .EQ. 0.0) THEN
        XFU = -(FGU * COS80 + FGV * SIN80)
        FV  = -(FGV * COS80 - FGU * SIN80)
      ELSE
        XFU = (FGU * FFJD - FGV * FFID) / DFP
        FV  = (FGU * FFID + FGV * FFJD) / DFP
      ENDIF
      FU = XFU
      RETURN
      END
C
C +------------------------------------------------------------------+
C
      SUBROUTINE W3FC08(FFID, FFJD, FU, FV, FGU, FGV)
C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C                .      .    .                      .    .
C SUBPROGRAM:  W3FC08        U-V COMPS FROM EARTH TO NORTH HEM GRID
C   PRGMMR: CHASE            ORG: NMC421      DATE:88-10-26
C
C ABSTRACT: GIVEN THE EARTH-ORIENTED WIND COMPONENTS ON A NORTHERN
C   HEMISPHERE POLAR STEREOGRAPHIC GRID POINT, COMPUTE THE GRID-
C   ORIENTED COMPONENTS AT THAT POINT.  INPUT WIND COMPONENTS AT THE
C   NORTH POLE POINT ARE ASSUMED TO CONFORM TO
C   THE 'WMO' STANDARDS FOR REPORTING WINDS AT THE NORTH POLE, WITH
C   THE OUTPUT COMPONENTS COMPUTED RELATIVE TO THE X-Y AXES ON THE
C   GRID.  (SEE OFFICE NOTE 241 FOR WMO DEFINITION.)
C
C PROGRAM HISTORY LOG:
C   81-12-30  STACKPOLE, J.
C   88-10-18  CHASE, P.   LET OUTPUT VARIABLES OVERLAY INPUT
C   91-03-05  R.E.JONES   CHANGES FOR MORE STANDARD FORTRAN
C
C USAGE:    CALL W3FC08 (FFID, FFJD, FU, FV, FGU, FGV)
C
C   INPUT ARGUMENT LIST:
C     FFID     - REAL   I-DISPLACEMENT FROM POINT TO NORTH POLE IN
C                GRID UNITS
C     FFJD     - REAL   J-DISPLACEMENT FROM POINT TO NORTH POLE IN
C                GRID UNITS
C     FU       - REAL   EARTH-ORIENTED U-COMPONENT, POSITIVE FROM WEST
C     FV       - REAL   EARTH-ORIENTED V-COMPONENT, POSITIVE FROM EAST
C
C   OUTPUT ARGUMENT LIST:
C     FGU      - REAL   GRID-ORIENTED U-COMPONENT.  MAY REFERENCE
C                SAME LOCATION AS FU.
C     FGV      - REAL   GRID-ORIENTED V-COMPONENT.  MAY REFERENCE
C                SAME LOCATION AS FV.
C
C   INPUT FILES:   NONE
C
C   OUTPUT FILES:  NONE
C
C   SUBPROGRAMS CALLED:
C     LIBRARY:
C       COMMON   - SQRT
C
C REMARKS:  FFID AND FFJD MAY BE CALCULATED AS FOLLOWS.....
C     FFID = REAL(IP - I)
C     FFJD = REAL(JP - J)
C   WHERE (IP, JP) ARE THE GRID COORDINATES OF THE NORTH POLE AND
C   (I,J) ARE THE GRID COORDINATES OF THE POINT.
C
C ATTRIBUTES:
C   LANGUAGE: IBM370 VS FORTRAN
C   MACHINE:  NAS
C
C$$$
C
      DATA  COS280/  0.1736482 /
      DATA  SIN280/ -0.9848078 /
C
C     COS280 AND SIN280 ARE FOR WIND AT POLE
C     (USED FOR CO-ORDINATE ROTATION TO GRID ORIENTATION)
C
      DFP = SQRT(FFID * FFID + FFJD * FFJD)
      IF (DFP .EQ. 0.) THEN
        XFGU = -(FU * COS280 + FV * SIN280)
        FGV  = -(FV * COS280 - FU * SIN280)
      ELSE
        XFGU = (FU * FFJD + FV * FFID) / DFP
        FGV  = (FV * FFJD - FU * FFID) / DFP
      ENDIF
      FGU = XFGU
      RETURN
      END
