#! /bin/bash

#--------------------------------------------------------------------
#
# install source release
#
# Mike Dixon, EOL, NCAR, Boulder, CO, USA
# August 2016
#
#--------------------------------------------------------------------

#--------------------------------------------------------------------
# usage function
#

function usage() {
    echo
    echo "Usage: install_src_release [options below]"
    echo "  -h   :  produce this usage list"
    echo "  -d   :  turn debugging on"
    echo "  -p ? :  set package name"
    echo "           default is 'lrose'"
    echo "  -r ? :  set release dir"
    echo "           default is $HOME/releases"
    echo "  -v   :  turn verbose debugging on"
    echo
}

#--------------------------------------------------------------------

# defaults

package=lrose
release_dir=$HOME/releases
debug=true
verbose=false

# Parse command line options.
while getopts hdvfsp:r: OPT; do
    case "$OPT" in
        h)
            usage
            exit 0
            ;;
        d)
            debug=true
            ;;
        v)
            verbose=true
            ;;
        p)
            package=$OPTARG
            ;;
        r)
            release_dir=$OPTARG
            ;;
        \?)
            # getopts issues an error message
            echo "Problems with command line usage"
            usage
            exit 1
            ;;
    esac
done

dist_dir=$release_dir/${package}
core_dir=$dist_dir/tmp/lrose-core
codebase_dir=$dist_dir/tmp/lrose-core/codebase

if [ "$debug" == "true" ]
then
  echo "Running install_src_release"
  echo "  package: $package"
  echo "  release_dir: $release_dir"
  echo "  dist_dir: $dist_dir"
  echo "  codebase_dir: $codebase_dir"
  echo "  debug: $debug"
  echo "  verbose: $verbose"
fi

# Remove the switches we parsed above.
shift `expr $OPTIND - 1`

#######################################################
# get run time

year=`date -u +'%Y'`
month=`date -u +'%m'`
day=`date -u +'%d'`
hour=`date -u +'%H'`
min=`date -u +'%M'`
sec=`date -u +'%S'`

#--------------------------------------------------------------------

echo
echo "*********************************************************************"
echo
echo "  Installing ${package} source release"
echo
echo "  NCAR, Boulder, CO, USA"
echo
echo "  $year/$month/$day $hour:$min:$sec"
echo
echo "*********************************************************************"
echo

echo "Installing the src release ...."

release=`ls ${package}-????????.src.tgz`

# make sure previous_releases dir exists

cd $dist_dir
prevdir=previous_releases
if [ -f $prevdir ]
then
  /bin/rm -f $prevdir
fi
mkdir -p $prevdir

# move old release out of the way

/bin/mv -f ${package}-????????*.tgz previous_releases

# copy in new release

cp ${codebase_dir}/$release . || exit 1

tar_url=https://www.eol.ucar.edu/software/lrose-core/${release}
if [ "$package" = radx ]
then
  tar_url=https://www.eol.ucar.edu/software/radx/${release}
elif [ "$package" = cidd ]
then
  tar_url=https://www.eol.ucar.edu/software/cidd-cartesian-interactive-data-display/${release}
fi

formula_name="${package}.rb"
$codebase_dir/build/build_${package}_formula $tar_url $release $formula_name

/bin/cp -f $codebase_dir/build/docs/*.TXT .
/bin/cp -f $core_dir/release_notes/${package}_release_notes.txt .

#--------------------------------------------------------------------
# done

echo
echo "  **************************************************"
echo "  *** Done installing src release ***"
echo "  *** release file name: $release ***"
echo "  **************************************************"
echo

exit 0
