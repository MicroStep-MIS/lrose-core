#! /bin/bash

#--------------------------------------------------------------------
#
# prepare lrose release
#
# Mike Dixon, RAP, NCAR, Boulder, CO, USA
# July 2010
#
#--------------------------------------------------------------------

#--------------------------------------------------------------------
# usage function
#

function usage() {
    echo
    echo "Usage: prepare_src_release [options below]"
    echo "  -h:  produce this usage list"
    echo "  -d:  turn debugging on"
    echo "  -p ? :  set package name"
    echo "           default is 'lrose'"
    echo "  -s:  statically-linked release"
    echo "       default is dynamic linking"
    echo "  -v:  turn verbose on"
    echo
}

#--------------------------------------------------------------------

# defaults

package=lrose
debug=true
verbose=false
static=false

# Parse command line options.
while getopts hdsvp: OPT; do
    case "$OPT" in
        h)
            usage
            exit 0
            ;;
        d)
            debug=true
            ;;
        v)
            verbose=true
            ;;
        p)
            package=$OPTARG
            ;;
        s)
            static=true
            ;;
        \?)
            # getopts issues an error message
            echo "Problems with command line usage"
            usage
            exit 1
            ;;
    esac
done

if [ "$debug" == "true" ]
then
  echo "Running prepare_src_release"
  echo "  package: $package"
  echo "  debug: $debug"
  echo "  verbose: $verbose"
  echo "  static: $static"
fi

# Remove the switches we parsed above.
shift `expr $OPTIND - 1`

#######################################################
# get run time

year=`date -u +'%Y'`
month=`date -u +'%m'`
day=`date -u +'%d'`
hour=`date -u +'%H'`
min=`date -u +'%M'`
sec=`date -u +'%S'`

#--------------------------------------------------------------------

echo
echo "*********************************************************************"
echo
echo "  Preparing ${package} release"
echo
echo "  NCAR, Boulder, CO, USA"
echo
echo "  $year/$month/$day $hour:$min:$sec"
echo
echo "*********************************************************************"
echo

# remove any previous tar files

/bin/rm -f *.tgz

# create configure.ac, makefile.am files
# run AutoConf

/bin/cp ./build/configure.base . || exit 1
/bin/cp ./build/configure.base.shared . || exit 1
/bin/cp ./build/Makefile.top ./Makefile || exit 1

# create project-specific makefiles

./make_bin/install_distro_makefiles.py --distro ${package} --codedir . || exit 1

# set up automake configure

debug_str=
if [ "$verbose" == "true" ]
then
    debug_str=--verbose
else
    debug_str=--debug
fi

if [ "$static" == "true" ]
then
    ./make_bin/createConfigure.am.py --dir . --pkg ${package} $debug_str || exit 1
else
    ./make_bin/createConfigure.am.py --dir . --baseName configure.base.shared \
        $debug_str --shared --pkg ${package} || exit 1
fi

# copy docs to this level

cp ../LICENSE.txt . || exit 1
cp ./build/docs/*.TXT . || exit 1
cp -r ../release_notes/${package}_release_notes.txt . || exit 1

# copy build scripts to this level

/bin/cp ../../lrose-netcdf/build_and_install_netcdf . || exit 1
/bin/cp ./build/build_${package} . || exit 1
/bin/cp ./release/prepare_bin_release.${package} . || exit 1

# copy in the package tar file dependencies

mkdir -p tar_files || exit 1
/bin/cp -rf ../../lrose-netcdf/tar_files/* tar_files || exit 1

# compute release name and dir name

today=${year}${month}${day}
distName=${package}-${today}.src
srcTarName=${distName}.tgz
echo Preparing source release file $srcTarName

# make dist dir

/bin/rm -rf ${package}-????????* || exit 1
mkdir -p $distName || exit 1

# move everything there

mv * $distName

# make the tar file

tar cvfz $srcTarName --dereference $distName || exit 1

# move everything back

mv $distName/* . || exit 1
/bin/rm -rf $distName || exit 1

#--------------------------------------------------------------------
# done

echo
echo "  **************************************************"
echo "  *** Done preparing release ***"
echo "  *** source tar file name: $srcTarName ***"
echo "  **************************************************"
echo

exit 0
