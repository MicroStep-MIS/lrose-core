#! /bin/bash
#
# Building LROSE and required libraries
# =====================================
#
# This requires automake makefile.am files
#
# This script must be run from the 'lrose-core/codebase' subdirectory.
# 
# By default the libraries and applications will be installed in:
#
#   /usr/local/lrose/include
#   /usr/local/lrose/lib
#   /usr/local/lrose/bin
#
# You can change the install location by specifying it as
# a single argument to this script.
#
# For example:
#
#   build_lrose /tmp/lrose
#
# will install in:
#
#   /tmp/lrose/include
#   /tmp/lrose/lib
#   /tmp/lrose/bin

# Delend on HDF5, NETCDF and UDUNITS
# ----------------------------------
# Before running this,
# checkout https://github.com/NCAR/lrose-netcdf
# build and install hdf5, netcdf, udunits

################################################################################

# set the path

export PATH=${PATH}:.:/bin:./make_bin:/usr/bin:/sbin:/usr/sbin:/usr/bin/X11:/usr/local/bin:/usr/local/sbin:$HOME/bin:/usr/lib64/qt4/bin:/usr/lib/qt4/bin

# save starting location and script name

startingDir=`pwd`
runDir=$(basename $startingDir)
scriptName=$(basename $0)

# defaults

prefix=/usr/local/lrose
package=lrose
debug=true

#--------------------------------------------------------------------
# usage function
#

function usage() {
    echo
    echo "Usage: $scriptName [options below]"
    echo "  -h   :  produce this usage list"
    echo "  -d   :  turn debugging on"
    echo "  -p ? :  set package"
    echo "           default is 'lrose'"
    echo "  -x ? :  set prefix"
    echo "           default is '/usr/local/lrose'"
    echo
}

# Parse command line options.
while getopts hdp:x: OPT; do
    case "$OPT" in
        h)
            usage
            exit 0
            ;;
        d)
            debug=true
            ;;
        p)
            package=$OPTARG
            ;;
        x)
            prefix=$OPTARG
            ;;
        \?)
            # getopts issues an error message
            echo "Problems with command line usage"
            usage
            exit 1
            ;;
    esac
done

if [ "$debug" == "true" ]
then
  echo "Running $scriptName"
  echo "  package: $package"
  echo "  prefix: $prefix"
  echo "  runDir: $runDir"
fi

# Remove the switches we parsed above.
shift `expr $OPTIND - 1`

# set RPATH to be locatable relative to $ORIGIN, via LDFLAGS

export "LDFLAGS=-L${prefix}/lib -Wl,-rpath,'\$\$ORIGIN'/lrose_runtime_libs:${prefix}/lib"

# check we are in the correct place - i.e. have apps and libs below us

ls libs 2>&1 1> /dev/null
if [ $? -ne 0 ]
then
  echo "runDir incorrect: $runDir"
  echo "  Should have libs and apps in this directory"
  echo "  current dir: $startingDir"
  exit 1
fi

ls apps 2>&1 1> /dev/null
if [ $? -ne 0 ]
then
  echo "runDir incorrect: $runDir"
  echo "  Should have libs and apps in this directory"
  echo "  cwd: `pwd`"
  exit 1
fi

# first create the 'moc'-able files for Qt apps

cd $startingDir/apps/radar/src/HawkEye
rm -f moc_*   # remove any old moc_* files before we (re)generate them
qmake-qt4 -o Makefile.qmake
make -f Makefile.qmake mocables

# Build lrose - libraries and binaries
# ------------------------------------

export CPPFLAGS=" -std=c++11 "

export FC gfortran
export F77 gfortran
export F90 gfortran

cd $startingDir
./configure --with-hdf5=${prefix} --with-netcdf=${prefix} --prefix=${prefix} || exit 1

cd $startingDir/libs
make -k -j 8
make -k install-strip

cd $startingDir/apps
make -k -j 8
make -k install-strip

# Install perl lib modules
#-------------------------

cd $startingDir
cd libs/perl5/src
mkdir -p ${prefix}/lib/perl5
/bin/cp *pm ${prefix}/lib/perl5

# Install scripts
#----------------

XFcd $startingDir/apps/procmap/src/scripts
./install_scripts.lrose ${prefix}/bin

cd $startingDir/apps/scripts/src
./install_scripts.lrose ${prefix}/bin

# Checking the build
# ------------------

cd $startingDir
echo
echo "============= Checking libs for $package ============="

./make_bin/check_libs.py \
  --listPath ./build/libs_check_list.${package} \
  --libDir $prefix/lib \
  --label $package --maxAge 900 || exit 1

./build/check_libs -p $package -x $prefix

echo "===================================================="
echo
echo "============= checking apps for $package ============="
./build/check_apps -p $package -x $prefix
echo "=================================================="

