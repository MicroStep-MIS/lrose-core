#! /bin/bash -f
#
# create a release
# package defaults to lrose
#

# Mike Dixon, EOL, NCAR, Boulder, CO, USA
# August 2016

# set the path

export PATH=.:/bin:./make_bin:/usr/bin:/sbin:/usr/sbin:/usr/bin/X11:/usr/local/bin:/usr/local/sbin:$HOME/bin

#--------------------------------------------------------------------
# usage function
#

function usage() {
    echo
    echo "Usage: create_release [options below]"
    echo "  -h   :  produce this usage list"
    echo "  -d   :  turn debugging on"
    echo "  -f   :  force, do not request user to check it is OK to proceed"
    echo "  -p ? :  set package name"
    echo "           default is 'lrose'"
    echo "  -r ? :  set release dir"
    echo "           default is $HOME/releases"
    echo "  -s   :  produce distribution for static linking"
    echo "           default is dynamic linking"
    echo "  -v   :  turn verbose debugging on"
    echo
}

#--------------------------------------------------------------------

# defaults

package=lrose
release_dir=$HOME/releases
debug=true
verbose=false
static=false
force=false

# Parse command line options.
while getopts hdvfsp:r: OPT; do
    case "$OPT" in
        h)
            usage
            exit 0
            ;;
        d)
            debug=true
            ;;
        v)
            verbose=true
            ;;
        f)
            force=true
            ;;
        s)
            static=true
            ;;
        p)
            package=$OPTARG
            ;;
        r)
            release_dir=$OPTARG
            ;;
        \?)
            # getopts issues an error message
            echo "Problems with command line usage"
            usage
            exit 1
            ;;
    esac
done

tmp_dir=$release_dir/${package}/tmp

if [ "$debug" == "true" ]
then
  echo "Running create_release"
  echo "  package: $package"
  echo "  release_dir: $release_dir"
  echo "  tmp_dir: $tmp_dir"
  echo "  debug: $debug"
  echo "  verbose: $verbose"
  echo "  static: $static"
  echo "  force: $force"
fi

# Remove the switches we parsed above.
shift `expr $OPTIND - 1`

# delete contents of tmp_dir

if [ -d $tmp_dir ]
then

# go to release distribution dir

    cd $tmp_dir

# check that we should proceed

    if [ "$force" != "true" ]
    then
        echo "WARNING: you are about to remove all contents in dir: `pwd`"
        echo "========================================================="
        ls -al
        echo "========================================================="
        read -ep "WARNING: do you wish to proceed (y/n)? " answer
        test "$answer" || answer=n
        if [ "$answer" != "y" ]
        then
            echo "Aborted"
            exit 1
        fi
    fi

    echo "Proceeding ......."
    echo "  Removing all contents in dir: `pwd`"

    cd ..
    echo /bin/rm -rf $tmp_dir
    /bin/rm -rf $tmp_dir

fi

# mkdir again, go there

mkdir -p $tmp_dir
cd $tmp_dir

# perform checkout

git clone https://github.com/NCAR/lrose-netcdf
git clone https://github.com/NCAR/lrose-core
cd lrose-core/codebase

# prepare src release

debug_str=" "
if [ "$verbose" == "true" ]
then
    debug_str=-v
else
    debug_str=-d
fi


if [ "$static" == "true" ]
then
    ./release/prepare_src_release -s $debug_str -p $package || exit 1
else
    ./release/prepare_src_release $debug_str -p $package || exit 1
fi

# install src release

./release/install_src_release $debug_str -p $package -r $release_dir || exit 1

exit 0
